{"version":3,"file":"uSync.js","sources":["../../../usync-assets/src/components/usync-action-box.ts","../../../usync-assets/src/components/usync-progress-box.ts","../../../usync-assets/src/components/usync-results-view.ts","../../../usync-assets/node_modules/diff/lib/index.mjs","../../../usync-assets/src/components/usync-change-view.ts","../../../usync-assets/src/api/core/ApiError.ts","../../../usync-assets/src/api/core/CancelablePromise.ts","../../../usync-assets/src/api/core/OpenAPI.ts","../../../usync-assets/src/api/schemas.gen.ts","../../../usync-assets/src/api/core/request.ts","../../../usync-assets/src/api/services.gen.ts","../../../usync-assets/src/api/types.gen.ts","../../../usync-assets/src/dialogs/details-modal-element.ts","../../../usync-assets/src/dialogs/details-modal-token.ts","../../../usync-assets/src/dialogs/error-modal-element.ts","../../../usync-assets/src/dialogs/error-modal-token.ts","../../../usync-assets/src/components/usync-results-group-view.ts","../../../usync-assets/src/signalr/signalr.context.ts","../../../usync-assets/src/signalr/signalr.context.token.ts","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Errors.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/ILogger.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Loggers.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Utils.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/Subject.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HubConnection.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HeaderNames.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/ITransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/AbortController.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HttpConnection.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js","../../../usync-assets/node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js","../../../usync-assets/src/repository/SyncAction.respositoy.ts","../../../usync-assets/src/repository/sources/SyncAction.source.ts","../../../usync-assets/src/repository/sources/SyncMigration.source.ts","../../../usync-assets/src/repository/sources/SyncSettings.source.ts","../../../usync-assets/src/workspace/dialogs/import-modal.token.ts","../../../usync-assets/src/workspace/dialogs/import-modal.element.ts","../../../usync-assets/src/workspace/workspace.context.ts","../../../usync-assets/src/workspace/views/default/default.element.ts","../../../usync-assets/src/workspace/workspace.element.ts","../../../usync-assets/src/constants.ts","../../../usync-assets/src/conditions/legacy-files.condition.ts","../../../usync-assets/src/tree/usync.menu-element.ts","../../../usync-assets/src/tree/manifest.ts","../../../usync-assets/src/workspace/dialogs/manifest.ts","../../../usync-assets/src/workspace/components/usync-action-button.ts","../../../usync-assets/src/workspace/components/usync-file-picker.element.ts","../../../usync-assets/src/workspace/components/usync-file-upload.element.ts","../../../usync-assets/src/workspace/manifest.ts","../../../usync-assets/src/lang/manifest.ts","../../../usync-assets/src/dialogs/manifest.ts","../../../usync-assets/src/conditions/manifest.ts","../../../usync-assets/src/icons/manifest.ts","../../../usync-assets/src/manifests.ts","../../../usync-assets/src/index.ts"],"sourcesContent":["import {\r\n\tLitElement,\r\n\tcustomElement,\r\n\thtml,\r\n\tcss,\r\n\tproperty,\r\n\tifDefined,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { SyncActionGroup } from '@jumoo/uSync';\r\nimport { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/**\r\n * displays the action buttons for a given group\r\n */\r\n@customElement('usync-action-box')\r\nexport class uSyncActionBox extends LitElement {\r\n\t/**\r\n\t * Collection of buttons to display.\r\n\t */\r\n\t@property({ type: Object })\r\n\tgroup!: SyncActionGroup;\r\n\r\n\t/**\r\n\t * state to display on buttons\r\n\t */\r\n\t@property({ type: String })\r\n\tstate?: UUIButtonState;\r\n\r\n\t@property({ type: Boolean })\r\n\tdisabled: boolean = false;\r\n\r\n\t#onAction(e: CustomEvent, group: SyncActionGroup) {\r\n\t\tif (!e.detail?.button) return;\r\n\r\n\t\tthis.dispatchEvent(\r\n\t\t\tnew CustomEvent('perform-action', {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\tgroup: group,\r\n\t\t\t\t\tkey: e.detail.button.key,\r\n\t\t\t\t\tforce: e.detail.button.force,\r\n\t\t\t\t\tclean: e.detail.button.clean,\r\n\t\t\t\t\tfile: e.detail.button.file,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst dropdownButtons = this.group.buttons.map((b) => {\r\n\t\t\treturn html`\r\n\t\t\t\t<usync-action-button\r\n\t\t\t\t\t.button=${b}\r\n\t\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\t\tstate=${ifDefined(this.state)}\r\n\t\t\t\t\t@usync-action-click=${(e: CustomEvent) =>\r\n\t\t\t\t\t\tthis.#onAction(e, this.group)}></usync-action-button>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-box class=\"action-box ${this.disabled ? 'disabled' : ''}\">\r\n\t\t\t\t<div class=\"box-content\">\r\n\t\t\t\t\t<h2 class=\"box-heading\">${this.group?.groupName}</h2>\r\n\t\t\t\t\t<umb-icon name=${this.group?.icon}></umb-icon>\r\n\t\t\t\t\t<div class=\"box-buttons\">${dropdownButtons}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tflex-grow: 1;\r\n\t\t}\r\n\r\n\t\t.action-box {\r\n\t\t\ttransition: opacity 0.2s ease-in-out;\r\n\t\t}\r\n\r\n\t\t.box-content {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t}\r\n\r\n\t\t.box-heading {\r\n\t\t\tfont-size: var(--uui-size-7);\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\r\n\t\tumb-icon {\r\n\t\t\tmargin: var(--uui-size-space-6);\r\n\t\t\tfont-size: var(--uui-type-h2-size);\r\n\t\t\tcolor: var(--uui-color-text-alt);\r\n\t\t}\r\n\r\n\t\tuui-button {\r\n\t\t\tmargin: 0 var(--uui-size-space-2);\r\n\t\t\tfont-size: var(--uui-size-6);\r\n\t\t}\r\n\r\n\t\t.box-buttons {\r\n\t\t\tmargin: var(--uui-size-space-2) 0;\r\n\t\t}\r\n\r\n\t\t.disabled {\r\n\t\t\topacity: 0.4;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncActionBox;\r\n","import {\r\n\tcustomElement,\r\n\tLitElement,\r\n\tcss,\r\n\thtml,\r\n\tproperty,\r\n\tnothing,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tUSYNC_SIGNALR_CONTEXT_TOKEN,\r\n\tSyncUpdateMessage,\r\n\tHandlerStatus,\r\n\tSyncHandlerSummary,\r\n} from '@jumoo/uSync';\r\nimport { UUIInterfaceColor } from '@umbraco-cms/backoffice/external/uui';\r\n\r\n/**\r\n * Provides the progress box while things happen.\r\n */\r\n@customElement('usync-progress-box')\r\nexport class uSyncProcessBox extends UmbElementMixin(LitElement) {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(USYNC_SIGNALR_CONTEXT_TOKEN, (_signalR) => {\r\n\t\t\tthis.observe(_signalR.update, (_update) => {\r\n\t\t\t\tthis.updateMsg = _update;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_signalR.add, (_add) => {\r\n\t\t\t\tthis.addMsg = _add;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t@state()\r\n\tupdateMsg?: SyncUpdateMessage;\r\n\r\n\t@state()\r\n\taddMsg: object = {};\r\n\r\n\t@property({ type: String })\r\n\ttitle: string = '';\r\n\r\n\t@property({ type: Array })\r\n\tactions?: Array<SyncHandlerSummary>;\r\n\r\n\t@property({ type: Boolean })\r\n\tcomplete: boolean = false;\r\n\r\n\trender() {\r\n\t\tif (!this.actions) return nothing;\r\n\r\n\t\tvar actionHtml = this.actions?.map((action) => {\r\n\t\t\treturn html`\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle=\"position: relative;\"\r\n\t\t\t\t\tclass=\"action \r\n                    ${action.status == HandlerStatus.COMPLETE ? 'complete' : ''} \r\n                    ${action.status == HandlerStatus.PROCESSING ? 'working' : ''}\">\r\n\t\t\t\t\t<uui-icon .name=${action.icon ?? 'icon-box'}></uui-icon>\r\n\t\t\t\t\t${this.renderBadge(action)}\r\n\t\t\t\t\t<h5>${action.name ?? 'unknown'}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-box>\r\n\t\t\t\t<h2>${this.title}</h2>\r\n\t\t\t\t<div class=\"action-list\">${actionHtml}</div>\r\n\t\t\t\t<div class=\"update-box\">${this.updateMsg?.message}</div>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderBadge(action: SyncHandlerSummary) {\r\n\t\tif (action.status == HandlerStatus.PENDING) return;\r\n\t\tif (action.status == HandlerStatus.PROCESSING) {\r\n\t\t\treturn html`<uui-badge color=\"positive\" look=\"default\">\r\n\t\t\t\t<uui-icon name=\"icon-sync\"></uui-icon\r\n\t\t\t></uui-badge>`;\r\n\t\t}\r\n\r\n\t\tconst color: UUIInterfaceColor = action.inError ? 'warning' : 'positive';\r\n\t\tconst label = action.inError\r\n\t\t\t? 'Some errors occured duing import'\r\n\t\t\t: 'Changes imported successfully';\r\n\r\n\t\tif (!this.complete || action.changes == 0)\r\n\t\t\treturn html`<uui-badge .color=${color} look=\"default\" title=${label}\r\n\t\t\t\t><uui-icon name=\"icon-check\"></uui-icon\r\n\t\t\t></uui-badge>`;\r\n\t\treturn html`<uui-badge .color=${color} title=${label}>${action.changes}</uui-badge>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\r\n\t\th2 {\r\n\t\t\ttext-align: center;\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\r\n\t\t.action-list {\r\n\t\t\tmargin-top: var(--uui-size-space-4);\r\n\t\t\tpadding: var(--uui-size-space-4) 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\r\n\t\t.action {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\talign-items: center;\r\n\t\t\tmin-width: 90px;\r\n\t\t\tcolor: var(--uui-color-text-alt);\r\n\t\t\topacity: 0.67;\r\n\t\t}\r\n\r\n\t\t.action uui-icon {\r\n\t\t\tfont-size: var(--uui-type-h3-size);\r\n\t\t}\r\n\r\n\t\t.action uui-badge uui-icon {\r\n\t\t\tfont-size: 16px;\r\n\t\t}\r\n\r\n\t\t.complete {\r\n\t\t\tcolor: var(--uui-color-default-emphasis);\r\n\t\t}\r\n\r\n\t\t.working {\r\n\t\t\tcolor: var(--uui-color-positive);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\r\n\t\t.update-box {\r\n\t\t\tfont-weight: bold;\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncProcessBox;\r\n","import {\r\n\tLitElement,\r\n\thtml,\r\n\tcustomElement,\r\n\tproperty,\r\n\tcss,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { ChangeType, uSyncActionView } from '@jumoo/uSync';\r\nimport { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tUMB_MODAL_MANAGER_CONTEXT,\r\n\tUmbModalManagerContext,\r\n} from '@umbraco-cms/backoffice/modal';\r\nimport { USYNC_DETAILS_MODAL } from '@jumoo/uSync';\r\n\r\n@customElement('usync-results')\r\nexport class uSyncResultsView extends UmbElementMixin(LitElement) {\r\n\t#modalContext?: UmbModalManagerContext;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(UMB_MODAL_MANAGER_CONTEXT, (_instance) => {\r\n\t\t\tthis.#modalContext = _instance;\r\n\t\t});\r\n\t}\r\n\r\n\t@property({ type: Array })\r\n\tresults: Array<uSyncActionView> | undefined = [];\r\n\r\n\t@state()\r\n\tshowAll: boolean = false;\r\n\r\n\t@state()\r\n\tchangeCount = 0;\r\n\r\n\t#toggleShowAll() {\r\n\t\tthis.showAll = !this.showAll;\r\n\t}\r\n\r\n\tasync #showDetail(e: CustomEvent<uSyncActionView>) {\r\n\t\tconst action = e.detail;\r\n\r\n\t\tconst detailsModal = this.#modalContext?.open(this, USYNC_DETAILS_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\titem: action,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst data = await detailsModal?.onSubmit().catch(() => {\r\n\t\t\treturn;\r\n\t\t});\r\n\t\tif (!data) return;\r\n\t}\r\n\r\n\tgroupBy<T>(arr: T[], fn: (item: T) => any) {\r\n\t\treturn arr.reduce<Record<string, T[]>>((prev, curr) => {\r\n\t\t\tconst groupKey = fn(curr);\r\n\t\t\tconst group = prev[groupKey] || [];\r\n\t\t\tgroup.push(curr);\r\n\t\t\treturn { ...prev, [groupKey]: group };\r\n\t\t}, {});\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.changeCount =\r\n\t\t\tthis.results?.filter((r) => r.change !== ChangeType.NO_CHANGE).length ?? 0;\r\n\r\n\t\tconst groups = this.groupBy(this.results || [], (result) => result.itemType);\r\n\t\tconst groupsHtml = [];\r\n\r\n\t\tfor (const key in groups) {\r\n\t\t\tconst groupChanges =\r\n\t\t\t\tgroups[key].filter((r) => r.change !== ChangeType.NO_CHANGE).length ?? 0;\r\n\t\t\tif (groupChanges === 0 && !this.showAll) continue;\r\n\r\n\t\t\tconst groupHtml = html`<usync-result-group\r\n\t\t\t\t.groupName=${key}\r\n\t\t\t\t.results=${groups[key]}\r\n\t\t\t\t.showAll=${this.showAll}\r\n\t\t\t\t@show-detail=${this.#showDetail}></usync-result-group> `;\r\n\r\n\t\t\tgroupsHtml.push(groupHtml);\r\n\t\t}\r\n\r\n\t\treturn this.changeCount == 0 && !this.showAll\r\n\t\t\t? html`\r\n\t\t\t\t\t${this.renderResultBar(this.results?.length || 0, this.changeCount)}\r\n\t\t\t\t\t<div class=\"empty\">\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_noChange\"></umb-localize>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`\r\n\t\t\t: html`<div id=\"result-box\">\r\n\t\t\t\t\t${this.renderResultBar(this.results?.length || 0, this.changeCount)}\r\n\t\t\t\t\t${groupsHtml}\r\n\t\t\t\t</div>`;\r\n\t}\r\n\r\n\trenderResultBar(count: number, changes: number) {\r\n\t\tconst localKey = changes === 0 ? 'uSync_noChangeCount' : 'uSync_changeCount';\r\n\r\n\t\treturn html`<div class=\"result-header\">\r\n\t\t\t<uui-toggle\r\n\t\t\t\t.label=${this.localize.term('uSync_showAll')}\r\n\t\t\t\t?checked=${this.showAll}\r\n\t\t\t\t@change=${this.#toggleShowAll}></uui-toggle>\r\n\t\t\t<umb-localize .key=${localKey} .args=${[count, changes]}\r\n\t\t\t\t>${changes}/${count} items</umb-localize\r\n\t\t\t>\r\n\t\t</div>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: var(--uui-size-space-4) 0;\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tgap: var(--uui-size-space-4);\r\n\t\t}\r\n\r\n\t\t#result-box {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tgap: var(--uui-size-space-4);\r\n\t\t}\r\n\r\n\t\tuui-table {\r\n\t\t\tposition: relative;\r\n\t\t\tz-index: 100;\r\n\t\t}\r\n\r\n\t\t.result-header {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tpadding: var(--uui-size-space-4);\r\n\t\t}\r\n\r\n\t\t.result-header h3 {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\r\n\t\t.empty {\r\n\t\t\tpadding: var(--uui-size-20);\r\n\t\t\tfont-size: var(--uui-type-h5-size);\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-weight: 900;\r\n\t\t}\r\n\r\n\t\t.error {\r\n\t\t\tbackground-color: #fce4ec;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncResultsView;\r\n","function Diff() {}\nDiff.prototype = {\n  diff: function diff(oldString, newString) {\n    var _options$timeout;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n\n    if (options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n\n    var maxExecutionTime = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : Infinity;\n    var abortAfterTimestamp = Date.now() + maxExecutionTime;\n    var bestPath = [{\n      oldPos: -1,\n      lastComponent: undefined\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var newPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Once we hit the right edge of the edit graph on some diagonal k, we can\n    // definitely reach the end of the edit graph in no more than k edits, so\n    // there's no point in considering any moves to diagonal k+1 any more (from\n    // which we're guaranteed to need at least k+1 more edits).\n    // Similarly, once we've reached the bottom of the edit graph, there's no\n    // point considering moves to lower diagonals.\n    // We record this fact by setting minDiagonalToConsider and\n    // maxDiagonalToConsider to some finite value once we've hit the edge of\n    // the edit graph.\n    // This optimization is not faithful to the original algorithm presented in\n    // Myers's paper, which instead pointlessly extends D-paths off the end of\n    // the edit graph - see page 7 of Myers's paper which notes this point\n    // explicitly and illustrates it with a diagram. This has major performance\n    // implications for some common scenarios. For instance, to compute a diff\n    // where the new text simply appends d characters on the end of the\n    // original text of length n, the true Myers algorithm will take O(n+d^2)\n    // time while this optimization needs only O(n+d) time.\n\n\n    var minDiagonalToConsider = -Infinity,\n        maxDiagonalToConsider = Infinity; // Main worker method. checks all permutations of a given edit length for acceptance.\n\n    function execEditLength() {\n      for (var diagonalPath = Math.max(minDiagonalToConsider, -editLength); diagonalPath <= Math.min(maxDiagonalToConsider, editLength); diagonalPath += 2) {\n        var basePath = void 0;\n        var removePath = bestPath[diagonalPath - 1],\n            addPath = bestPath[diagonalPath + 1];\n\n        if (removePath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = false;\n\n        if (addPath) {\n          // what newPos will be after we do an insertion:\n          var addPathNewPos = addPath.oldPos - diagonalPath;\n          canAdd = addPath && 0 <= addPathNewPos && addPathNewPos < newLen;\n        }\n\n        var canRemove = removePath && removePath.oldPos + 1 < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the old string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n        // TODO: Remove the `+ 1` here to make behavior match Myers algorithm\n        //       and prefer to order removals before insertions.\n\n\n        if (!canRemove || canAdd && removePath.oldPos + 1 < addPath.oldPos) {\n          basePath = self.addToPath(addPath, true, undefined, 0);\n        } else {\n          basePath = self.addToPath(removePath, undefined, true, 1);\n        }\n\n        newPos = self.extractCommon(basePath, newString, oldString, diagonalPath);\n\n        if (basePath.oldPos + 1 >= oldLen && newPos + 1 >= newLen) {\n          // If we have hit the end of both strings, then we are done\n          return done(buildValues(self, basePath.lastComponent, newString, oldString, self.useLongestToken));\n        } else {\n          bestPath[diagonalPath] = basePath;\n\n          if (basePath.oldPos + 1 >= oldLen) {\n            maxDiagonalToConsider = Math.min(maxDiagonalToConsider, diagonalPath - 1);\n          }\n\n          if (newPos + 1 >= newLen) {\n            minDiagonalToConsider = Math.max(minDiagonalToConsider, diagonalPath + 1);\n          }\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          if (editLength > maxEditLength || Date.now() > abortAfterTimestamp) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength && Date.now() <= abortAfterTimestamp) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n  addToPath: function addToPath(path, added, removed, oldPosInc) {\n    var last = path.lastComponent;\n\n    if (last && last.added === added && last.removed === removed) {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: last.count + 1,\n          added: added,\n          removed: removed,\n          previousComponent: last.previousComponent\n        }\n      };\n    } else {\n      return {\n        oldPos: path.oldPos + oldPosInc,\n        lastComponent: {\n          count: 1,\n          added: added,\n          removed: removed,\n          previousComponent: last\n        }\n      };\n    }\n  },\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        oldPos = basePath.oldPos,\n        newPos = oldPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.lastComponent = {\n        count: commonCount,\n        previousComponent: basePath.lastComponent\n      };\n    }\n\n    basePath.oldPos = oldPos;\n    return newPos;\n  },\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n  castInput: function castInput(value) {\n    return value;\n  },\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, lastComponent, newString, oldString, useLongestToken) {\n  // First we convert our linked list of components in reverse order to an\n  // array in the right order:\n  var components = [];\n  var nextComponent;\n\n  while (lastComponent) {\n    components.push(lastComponent);\n    nextComponent = lastComponent.previousComponent;\n    delete lastComponent.previousComponent;\n    lastComponent = nextComponent;\n  }\n\n  components.reverse();\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var finalComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof finalComponent.value === 'string' && (finalComponent.added || finalComponent.removed) && diff.equals('', finalComponent.value)) {\n    components[componentLen - 2].value += finalComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nvar characterDiff = new Diff();\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\n\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new Diff();\n\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options = generateOptions(options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nvar lineDiff = new Diff();\n\nlineDiff.tokenize = function (value) {\n  if (this.options.stripTrailingCr) {\n    // remove one \\r before \\n to match GNU diff's --strip-trailing-cr behavior\n    value = value.replace(/\\r\\n/g, '\\n');\n  }\n\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options = generateOptions(callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n\nvar sentenceDiff = new Diff();\n\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n\nvar cssDiff = new Diff();\n\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\njsonDiff.useLongestToken = true;\njsonDiff.tokenize = lineDiff.tokenize;\n\njsonDiff.castInput = function (value) {\n  var _this$options = this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n    return typeof v === 'undefined' ? undefinedReplacement : v;\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (_typeof(obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n\nvar arrayDiff = new Diff();\n\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nfunction parsePatch(uniDiff) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction distanceIterator (start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n\nfunction applyPatch(source, uniDiff) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n    return line === patchContent;\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator = distanceIterator(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters && _hunk.linedelimiters[j] || '\\n';\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff = parsePatch(uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff = diffLines(oldStr, newStr, options);\n\n  if (!diff) {\n    return;\n  }\n\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  var _loop = function _loop(i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      var _curRange;\n\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          var _curRange2;\n\n          // Overlapping\n          (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n        } else {\n          var _curRange3;\n\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    _loop(i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\nfunction formatPatch(diff) {\n  if (Array.isArray(diff)) {\n    return diff.map(formatPatch).join('\\n');\n  }\n\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calcLineCount(hunk) {\n  var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return parsePatch(param)[0];\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return structuredPatch(undefined, undefined, base, param);\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      var _hunk$lines;\n\n      // Mine inserted\n      (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      var _hunk$lines2;\n\n      // Theirs inserted\n      (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      var _hunk$lines3;\n\n      (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n      return;\n    } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      var _hunk$lines4;\n\n      (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n      return;\n    }\n  } else if (arrayEqual(myChanges, theirChanges)) {\n    var _hunk$lines5;\n\n    (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    var _hunk$lines6;\n\n    (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n\nfunction reversePatch(structuredPatch) {\n  if (Array.isArray(structuredPatch)) {\n    return structuredPatch.map(reversePatch).reverse();\n  }\n\n  return _objectSpread2(_objectSpread2({}, structuredPatch), {}, {\n    oldFileName: structuredPatch.newFileName,\n    oldHeader: structuredPatch.newHeader,\n    newFileName: structuredPatch.oldFileName,\n    newHeader: structuredPatch.oldHeader,\n    hunks: structuredPatch.hunks.map(function (hunk) {\n      return {\n        oldLines: hunk.newLines,\n        oldStart: hunk.newStart,\n        newLines: hunk.oldLines,\n        newStart: hunk.oldStart,\n        linedelimiters: hunk.linedelimiters,\n        lines: hunk.lines.map(function (l) {\n          if (l.startsWith('-')) {\n            return \"+\".concat(l.slice(1));\n          }\n\n          if (l.startsWith('+')) {\n            return \"-\".concat(l.slice(1));\n          }\n\n          return l;\n        })\n      };\n    })\n  });\n}\n\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n\nexport { Diff, applyPatch, applyPatches, canonicalize, convertChangesToDMP, convertChangesToXML, createPatch, createTwoFilesPatch, diffArrays, diffChars, diffCss, diffJson, diffLines, diffSentences, diffTrimmedLines, diffWords, diffWordsWithSpace, formatPatch, merge, parsePatch, reversePatch, structuredPatch };\n","import { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tLitElement,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tproperty,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { ChangeType, uSyncActionView } from '@jumoo/uSync';\r\nimport * as Diff from 'diff';\r\n\r\n/**\r\n * shows the change details for an item.\r\n */\r\n@customElement('usync-change-view')\r\nexport class uSyncChangeView extends UmbElementMixin(LitElement) {\r\n\t@property({ type: Object })\r\n\titem?: uSyncActionView;\r\n\r\n\trender() {\r\n\t\tif (this.item?.change == ChangeType.CREATE) {\r\n\t\t\treturn this.render_create();\r\n\t\t}\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-table>\r\n\t\t\t\t<uui-table-head>\r\n\t\t\t\t\t<uui-table-head-cell>\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_changeAction\">Action</umb-localize>\r\n\t\t\t\t\t</uui-table-head-cell>\r\n\t\t\t\t\t<uui-table-head-cell>\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_changeItem\">Item</umb-localize>\r\n\t\t\t\t\t</uui-table-head-cell>\r\n\t\t\t\t\t<uui-table-head-cell>\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_changeDiffrence\">Difference</umb-localize>\r\n\t\t\t\t\t</uui-table-head-cell>\r\n\t\t\t\t</uui-table-head>\r\n\t\t\t\t${this.render_details()}\r\n\t\t\t</uui-table>\r\n\t\t`;\r\n\t}\r\n\r\n\trender_create() {\r\n\t\treturn html`\r\n\t\t\t<h1>\r\n\t\t\t\t<umb-localize key=\"uSync_changeCreate\">This item is being created</umb-localize>\r\n\t\t\t</h1>\r\n\t\t`;\r\n\t}\r\n\r\n\t#getJsonOrString(value: string | null | undefined) {\r\n\t\ttry {\r\n\t\t\treturn JSON.stringify(JSON.parse(value ?? ''), null, 1);\r\n\t\t} catch {\r\n\t\t\treturn value ?? '';\r\n\t\t}\r\n\t}\r\n\r\n\trender_details() {\r\n\t\tvar changesHtml = this.item?.details.map((detail) => {\r\n\t\t\tconst oldValue = this.#getJsonOrString(detail.oldValue);\r\n\t\t\tconst newValue = this.#getJsonOrString(detail.newValue);\r\n\t\t\tconst changes = Diff.diffWords(oldValue, newValue);\r\n\r\n\t\t\tconst changeHtml = changes.map((change: any) => {\r\n\t\t\t\tif (change.added) {\r\n\t\t\t\t\treturn html`<ins>${change.value}</ins>`;\r\n\t\t\t\t} else if (change.removed) {\r\n\t\t\t\t\treturn html`<del>${change.value}</del>`;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn html`<span>${change.value}</span>`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn html`\r\n\t\t\t\t<uui-table-row>\r\n\t\t\t\t\t<uui-table-cell>${detail.name}</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell>${detail.change}</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell class=\"detail-data\">\r\n\t\t\t\t\t\t<pre>${changeHtml}</pre>\r\n\t\t\t\t\t</uui-table-cell>\r\n\t\t\t\t</uui-table-row>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn changesHtml;\r\n\t}\r\n\r\n\trender_changes() {}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: var(--uui-size-space-4) 0;\r\n\t\t}\r\n\r\n\t\tuui-table-cell {\r\n\t\t\tvertical-align: top;\r\n\t\t}\r\n\r\n\t\tuui-table-cell pre {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t}\r\n\r\n\t\tpre ins {\r\n\t\t\tcolor: var(--uui-color-positive);\r\n\t\t}\r\n\r\n\t\tpre del {\r\n\t\t\tcolor: var(--uui-color-danger);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncChangeView;\r\n","import type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n\tpublic readonly url: string;\n\tpublic readonly status: number;\n\tpublic readonly statusText: string;\n\tpublic readonly body: unknown;\n\tpublic readonly request: ApiRequestOptions;\n\n\tconstructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n\t\tsuper(message);\n\n\t\tthis.name = 'ApiError';\n\t\tthis.url = response.url;\n\t\tthis.status = response.status;\n\t\tthis.statusText = response.statusText;\n\t\tthis.body = response.body;\n\t\tthis.request = request;\n\t}\n}","export class CancelError extends Error {\n\tconstructor(message: string) {\n\t\tsuper(message);\n\t\tthis.name = 'CancelError';\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn true;\n\t}\n}\n\nexport interface OnCancel {\n\treadonly isResolved: boolean;\n\treadonly isRejected: boolean;\n\treadonly isCancelled: boolean;\n\n\t(cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n\tprivate _isResolved: boolean;\n\tprivate _isRejected: boolean;\n\tprivate _isCancelled: boolean;\n\treadonly cancelHandlers: (() => void)[];\n\treadonly promise: Promise<T>;\n\tprivate _resolve?: (value: T | PromiseLike<T>) => void;\n\tprivate _reject?: (reason?: unknown) => void;\n\n\tconstructor(\n\t\texecutor: (\n\t\t\tresolve: (value: T | PromiseLike<T>) => void,\n\t\t\treject: (reason?: unknown) => void,\n\t\t\tonCancel: OnCancel\n\t\t) => void\n\t) {\n\t\tthis._isResolved = false;\n\t\tthis._isRejected = false;\n\t\tthis._isCancelled = false;\n\t\tthis.cancelHandlers = [];\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolve = resolve;\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = (value: T | PromiseLike<T>): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isResolved = true;\n\t\t\t\tif (this._resolve) this._resolve(value);\n\t\t\t};\n\n\t\t\tconst onReject = (reason?: unknown): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._isRejected = true;\n\t\t\t\tif (this._reject) this._reject(reason);\n\t\t\t};\n\n\t\t\tconst onCancel = (cancelHandler: () => void): void => {\n\t\t\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.cancelHandlers.push(cancelHandler);\n\t\t\t};\n\n\t\t\tObject.defineProperty(onCancel, 'isResolved', {\n\t\t\t\tget: (): boolean => this._isResolved,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isRejected', {\n\t\t\t\tget: (): boolean => this._isRejected,\n\t\t\t});\n\n\t\t\tObject.defineProperty(onCancel, 'isCancelled', {\n\t\t\t\tget: (): boolean => this._isCancelled,\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel as OnCancel);\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn \"Cancellable Promise\";\n\t}\n\n\tpublic then<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n\t\tonRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>) | null\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.promise.then(onFulfilled, onRejected);\n\t}\n\n\tpublic catch<TResult = never>(\n\t\tonRejected?: ((reason: unknown) => TResult | PromiseLike<TResult>) | null\n\t): Promise<T | TResult> {\n\t\treturn this.promise.catch(onRejected);\n\t}\n\n\tpublic finally(onFinally?: (() => void) | null): Promise<T> {\n\t\treturn this.promise.finally(onFinally);\n\t}\n\n\tpublic cancel(): void {\n\t\tif (this._isResolved || this._isRejected || this._isCancelled) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isCancelled = true;\n\t\tif (this.cancelHandlers.length) {\n\t\t\ttry {\n\t\t\t\tfor (const cancelHandler of this.cancelHandlers) {\n\t\t\t\t\tcancelHandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.warn('Cancellation threw an error', error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.cancelHandlers.length = 0;\n\t\tif (this._reject) this._reject(new CancelError('Request aborted'));\n\t}\n\n\tpublic get isCancelled(): boolean {\n\t\treturn this._isCancelled;\n\t}\n}","import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>): void {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>): void {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\nexport const ChangeDetailTypeSchema = {\r\n    enum: ['NoChange', 'Create', 'Update', 'Delete', 'Error', 'Warning'],\r\n    type: 'string'\r\n} as const;\r\n\r\nexport const ChangeTypeSchema = {\r\n    enum: ['NoChange', 'Create', 'Import', 'Export', 'Update', 'Delete', 'WillChange', 'Information', 'Rolledback', 'Fail', 'ImportFail', 'Mismatch', 'ParentMissing', 'Hidden', 'Clean', 'Removed'],\r\n    type: 'string'\r\n} as const;\r\n\r\nexport const EventMessageTypeModelSchema = {\r\n    enum: ['Default', 'Info', 'Error', 'Success', 'Warning'],\r\n    type: 'string'\r\n} as const;\r\n\r\nexport const HandlerSettingsSchema = {\r\n    required: ['actions', 'createClean', 'enabled', 'failOnMissingParent', 'group', 'guidNames', 'settings', 'useFlatStructure'],\r\n    type: 'object',\r\n    properties: {\r\n        enabled: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        actions: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            }\r\n        },\r\n        useFlatStructure: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        guidNames: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        failOnMissingParent: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        group: {\r\n            type: 'string',\r\n            default: ''\r\n        },\r\n        createClean: {\r\n            type: 'boolean'\r\n        },\r\n        settings: {\r\n            type: 'object',\r\n            additionalProperties: {\r\n                type: 'string'\r\n            }\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const HandlerStatusSchema = {\r\n    enum: ['Pending', 'Processing', 'Complete', 'Error'],\r\n    type: 'string'\r\n} as const;\r\n\r\nexport const NotificationHeaderModelSchema = {\r\n    required: ['category', 'message', 'type'],\r\n    type: 'object',\r\n    properties: {\r\n        message: {\r\n            type: 'string'\r\n        },\r\n        category: {\r\n            type: 'string'\r\n        },\r\n        type: {\r\n            '$ref': '#/components/schemas/EventMessageTypeModel'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const PerformActionRequestSchema = {\r\n    required: ['action', 'requestId', 'stepNumber'],\r\n    type: 'object',\r\n    properties: {\r\n        requestId: {\r\n            type: 'string'\r\n        },\r\n        action: {\r\n            type: 'string'\r\n        },\r\n        stepNumber: {\r\n            type: 'integer',\r\n            format: 'int32'\r\n        },\r\n        options: {\r\n            oneOf: [\r\n                {\r\n                    '$ref': '#/components/schemas/uSyncOptions'\r\n                }\r\n            ],\r\n            nullable: true\r\n        },\r\n        username: {\r\n            type: 'string',\r\n            nullable: true\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const PerformActionResponseSchema = {\r\n    required: ['complete', 'requestId'],\r\n    type: 'object',\r\n    properties: {\r\n        requestId: {\r\n            type: 'string'\r\n        },\r\n        status: {\r\n            type: 'array',\r\n            items: {\r\n                oneOf: [\r\n                    {\r\n                        '$ref': '#/components/schemas/SyncHandlerSummary'\r\n                    }\r\n                ]\r\n            },\r\n            nullable: true\r\n        },\r\n        actions: {\r\n            type: 'array',\r\n            items: {\r\n                oneOf: [\r\n                    {\r\n                        '$ref': '#/components/schemas/uSyncActionView'\r\n                    }\r\n                ]\r\n            },\r\n            nullable: true\r\n        },\r\n        complete: {\r\n            type: 'boolean'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const SyncActionButtonSchema = {\r\n    required: ['children', 'clean', 'color', 'file', 'force', 'key', 'label', 'look'],\r\n    type: 'object',\r\n    properties: {\r\n        key: {\r\n            type: 'string'\r\n        },\r\n        label: {\r\n            type: 'string'\r\n        },\r\n        look: {\r\n            type: 'string'\r\n        },\r\n        color: {\r\n            type: 'string'\r\n        },\r\n        force: {\r\n            type: 'boolean'\r\n        },\r\n        clean: {\r\n            type: 'boolean'\r\n        },\r\n        file: {\r\n            type: 'boolean'\r\n        },\r\n        children: {\r\n            type: 'array',\r\n            items: {\r\n                oneOf: [\r\n                    {\r\n                        '$ref': '#/components/schemas/SyncActionButton'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const SyncActionGroupSchema = {\r\n    required: ['buttons', 'groupName', 'icon', 'key'],\r\n    type: 'object',\r\n    properties: {\r\n        key: {\r\n            type: 'string'\r\n        },\r\n        icon: {\r\n            type: 'string'\r\n        },\r\n        groupName: {\r\n            type: 'string'\r\n        },\r\n        buttons: {\r\n            type: 'array',\r\n            items: {\r\n                oneOf: [\r\n                    {\r\n                        '$ref': '#/components/schemas/SyncActionButton'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const SyncHandlerSummarySchema = {\r\n    required: ['changes', 'icon', 'inError', 'name', 'status'],\r\n    type: 'object',\r\n    properties: {\r\n        icon: {\r\n            type: 'string'\r\n        },\r\n        name: {\r\n            type: 'string'\r\n        },\r\n        status: {\r\n            '$ref': '#/components/schemas/HandlerStatus'\r\n        },\r\n        changes: {\r\n            type: 'integer',\r\n            format: 'int32'\r\n        },\r\n        inError: {\r\n            type: 'boolean'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const SyncLegacyCheckResponseSchema = {\r\n    required: ['hasLegacy', 'latestFolder', 'latestVersion', 'legacyTypes'],\r\n    type: 'object',\r\n    properties: {\r\n        hasLegacy: {\r\n            type: 'boolean'\r\n        },\r\n        legacyFolder: {\r\n            type: 'string',\r\n            nullable: true\r\n        },\r\n        legacyTypes: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            }\r\n        },\r\n        latestFolder: {\r\n            type: 'string'\r\n        },\r\n        latestVersion: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const UploadImportResultSchema = {\r\n    required: ['errors', 'success'],\r\n    type: 'object',\r\n    properties: {\r\n        success: {\r\n            type: 'boolean'\r\n        },\r\n        errors: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            }\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const uSyncActionViewSchema = {\r\n    required: ['change', 'details', 'handler', 'itemType', 'key', 'name', 'success'],\r\n    type: 'object',\r\n    properties: {\r\n        key: {\r\n            type: 'string',\r\n            format: 'uuid'\r\n        },\r\n        name: {\r\n            type: 'string'\r\n        },\r\n        handler: {\r\n            type: 'string'\r\n        },\r\n        itemType: {\r\n            type: 'string'\r\n        },\r\n        change: {\r\n            '$ref': '#/components/schemas/ChangeType'\r\n        },\r\n        success: {\r\n            type: 'boolean'\r\n        },\r\n        details: {\r\n            type: 'array',\r\n            items: {\r\n                oneOf: [\r\n                    {\r\n                        '$ref': '#/components/schemas/uSyncChange'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        message: {\r\n            type: 'string',\r\n            nullable: true\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const uSyncAddonInfoSchema = {\r\n    required: ['version'],\r\n    type: 'object',\r\n    properties: {\r\n        version: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const uSyncAddonSplashSchema = {\r\n    type: 'object',\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const uSyncChangeSchema = {\r\n    required: ['change', 'name', 'newValue', 'oldValue', 'path', 'success'],\r\n    type: 'object',\r\n    properties: {\r\n        success: {\r\n            type: 'boolean'\r\n        },\r\n        name: {\r\n            type: 'string'\r\n        },\r\n        path: {\r\n            type: 'string'\r\n        },\r\n        oldValue: {\r\n            type: 'string'\r\n        },\r\n        newValue: {\r\n            type: 'string'\r\n        },\r\n        change: {\r\n            '$ref': '#/components/schemas/ChangeDetailType'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const uSyncHandlerSetSettingsSchema = {\r\n    required: ['disabledHandlers', 'enabled', 'handlerDefaults', 'handlerGroups', 'handlers', 'isSelectable'],\r\n    type: 'object',\r\n    properties: {\r\n        enabled: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        handlerGroups: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            }\r\n        },\r\n        disabledHandlers: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            }\r\n        },\r\n        handlerDefaults: {\r\n            oneOf: [\r\n                {\r\n                    '$ref': '#/components/schemas/HandlerSettings'\r\n                }\r\n            ]\r\n        },\r\n        handlers: {\r\n            type: 'object',\r\n            additionalProperties: {\r\n                oneOf: [\r\n                    {\r\n                        '$ref': '#/components/schemas/HandlerSettings'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        isSelectable: {\r\n            type: 'boolean'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const uSyncOptionsSchema = {\r\n    required: ['clean', 'clientId', 'files', 'force', 'group', 'set'],\r\n    type: 'object',\r\n    properties: {\r\n        clientId: {\r\n            type: 'string'\r\n        },\r\n        force: {\r\n            type: 'boolean'\r\n        },\r\n        clean: {\r\n            type: 'boolean'\r\n        },\r\n        files: {\r\n            type: 'boolean'\r\n        },\r\n        group: {\r\n            type: 'string'\r\n        },\r\n        set: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;\r\n\r\nexport const uSyncSettingsSchema = {\r\n    required: ['addOnPing', 'backgroundNotifications', 'cacheFolderKeys', 'customMappings', 'defaultExtension', 'defaultSet', 'disableDashboard', 'disableNotificationSuppression', 'enableHistory', 'exportAtStartup', 'exportOnSave', 'failOnDuplicates', 'failOnMissingParent', 'firstBootGroup', 'folders', 'hideAddOns', 'importAtStartup', 'importOnFirstBoot', 'isRootSite', 'legacyFolder', 'lockRoot', 'lockRootTypes', 'onceFile', 'rebuildCacheOnCompletion', 'reportDebug', 'rootFolder', 'showVersionCheckWarning', 'stopFile', 'summaryDashboard', 'summaryLimit', 'uiEnabledGroups'],\r\n    type: 'object',\r\n    properties: {\r\n        rootFolder: {\r\n            type: 'string',\r\n            default: 'uSync/v14/'\r\n        },\r\n        folders: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            },\r\n            default: 'uSync/Root/, uSync/v14/'\r\n        },\r\n        legacyFolder: {\r\n            type: 'string',\r\n            default: 'uSync/v9'\r\n        },\r\n        isRootSite: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        lockRoot: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        stopFile: {\r\n            type: 'string',\r\n            default: 'usync.stop'\r\n        },\r\n        onceFile: {\r\n            type: 'string',\r\n            default: 'usync.once'\r\n        },\r\n        lockRootTypes: {\r\n            type: 'array',\r\n            items: {\r\n                type: 'string'\r\n            }\r\n        },\r\n        defaultSet: {\r\n            type: 'string',\r\n            default: 'Default'\r\n        },\r\n        importAtStartup: {\r\n            type: 'string',\r\n            default: 'None'\r\n        },\r\n        exportAtStartup: {\r\n            type: 'string',\r\n            default: 'None'\r\n        },\r\n        exportOnSave: {\r\n            type: 'string',\r\n            default: 'All'\r\n        },\r\n        uiEnabledGroups: {\r\n            type: 'string',\r\n            default: 'All'\r\n        },\r\n        reportDebug: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        addOnPing: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        rebuildCacheOnCompletion: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        failOnMissingParent: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        failOnDuplicates: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        cacheFolderKeys: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        showVersionCheckWarning: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        customMappings: {\r\n            type: 'object',\r\n            additionalProperties: {\r\n                type: 'string'\r\n            }\r\n        },\r\n        enableHistory: {\r\n            type: 'boolean',\r\n            default: true\r\n        },\r\n        defaultExtension: {\r\n            type: 'string',\r\n            default: 'config'\r\n        },\r\n        importOnFirstBoot: {\r\n            type: 'boolean',\r\n            default: false\r\n        },\r\n        firstBootGroup: {\r\n            type: 'string',\r\n            default: 'All'\r\n        },\r\n        disableDashboard: {\r\n            type: 'boolean',\r\n            default: 'false'\r\n        },\r\n        summaryDashboard: {\r\n            type: 'boolean',\r\n            default: 'false'\r\n        },\r\n        summaryLimit: {\r\n            type: 'integer',\r\n            format: 'int32',\r\n            default: 1000\r\n        },\r\n        hideAddOns: {\r\n            type: 'string'\r\n        },\r\n        disableNotificationSuppression: {\r\n            type: 'boolean',\r\n            default: 'true'\r\n        },\r\n        backgroundNotifications: {\r\n            type: 'boolean',\r\n            default: false\r\n        }\r\n    },\r\n    additionalProperties: false\r\n} as const;","import { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isString = (value: unknown): value is string => {\n\treturn typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: unknown): value is string => {\n\treturn isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n\treturn value instanceof Blob;\n};\n\nexport const isFormData = (value: unknown): value is FormData => {\n\treturn value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n\ttry {\n\t\treturn btoa(str);\n\t} catch (err) {\n\t\t// @ts-ignore\n\t\treturn Buffer.from(str).toString('base64');\n\t}\n};\n\nexport const getQueryString = (params: Record<string, unknown>): string => {\n\tconst qs: string[] = [];\n\n\tconst append = (key: string, value: unknown) => {\n\t\tqs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n\t};\n\n\tconst encodePair = (key: string, value: unknown) => {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tappend(key, value.toISOString());\n\t\t} else if (Array.isArray(value)) {\n\t\t\tvalue.forEach(v => encodePair(key, v));\n\t\t} else if (typeof value === 'object') {\n\t\t\tObject.entries(value).forEach(([k, v]) => encodePair(`${key}[${k}]`, v));\n\t\t} else {\n\t\t\tappend(key, value);\n\t\t}\n\t};\n\n\tObject.entries(params).forEach(([key, value]) => encodePair(key, value));\n\n\treturn qs.length ? `?${qs.join('&')}` : '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n\tconst encoder = config.ENCODE_PATH || encodeURI;\n\n\tconst path = options.url\n\t\t.replace('{api-version}', config.VERSION)\n\t\t.replace(/{(.*?)}/g, (substring: string, group: string) => {\n\t\t\tif (options.path?.hasOwnProperty(group)) {\n\t\t\t\treturn encoder(String(options.path[group]));\n\t\t\t}\n\t\t\treturn substring;\n\t\t});\n\n\tconst url = config.BASE + path;\n\treturn options.query ? url + getQueryString(options.query) : url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n\tif (options.formData) {\n\t\tconst formData = new FormData();\n\n\t\tconst process = (key: string, value: unknown) => {\n\t\t\tif (isString(value) || isBlob(value)) {\n\t\t\t\tformData.append(key, value);\n\t\t\t} else {\n\t\t\t\tformData.append(key, JSON.stringify(value));\n\t\t\t}\n\t\t};\n\n\t\tObject.entries(options.formData)\n\t\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t\t.forEach(([key, value]) => {\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tvalue.forEach(v => process(key, v));\n\t\t\t\t} else {\n\t\t\t\t\tprocess(key, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\treturn formData;\n\t}\n\treturn undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions<T>, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n\tif (typeof resolver === 'function') {\n\t\treturn (resolver as Resolver<T>)(options);\n\t}\n\treturn resolver;\n};\n\nexport const getHeaders = async <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): Promise<Headers> => {\n\tconst [token, username, password, additionalHeaders] = await Promise.all([\n\t\t// @ts-ignore\n\t\tresolve(options, config.TOKEN),\n\t\t// @ts-ignore\n\t\tresolve(options, config.USERNAME),\n\t\t// @ts-ignore\n\t\tresolve(options, config.PASSWORD),\n\t\t// @ts-ignore\n\t\tresolve(options, config.HEADERS),\n\t]);\n\n\tconst headers = Object.entries({\n\t\tAccept: 'application/json',\n\t\t...additionalHeaders,\n\t\t...options.headers,\n\t})\n\t\t.filter(([, value]) => value !== undefined && value !== null)\n\t\t.reduce((headers, [key, value]) => ({\n\t\t\t...headers,\n\t\t\t[key]: String(value),\n\t\t}), {} as Record<string, string>);\n\n\tif (isStringWithValue(token)) {\n\t\theaders['Authorization'] = `Bearer ${token}`;\n\t}\n\n\tif (isStringWithValue(username) && isStringWithValue(password)) {\n\t\tconst credentials = base64(`${username}:${password}`);\n\t\theaders['Authorization'] = `Basic ${credentials}`;\n\t}\n\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType) {\n\t\t\theaders['Content-Type'] = options.mediaType;\n\t\t} else if (isBlob(options.body)) {\n\t\t\theaders['Content-Type'] = options.body.type || 'application/octet-stream';\n\t\t} else if (isString(options.body)) {\n\t\t\theaders['Content-Type'] = 'text/plain';\n\t\t} else if (!isFormData(options.body)) {\n\t\t\theaders['Content-Type'] = 'application/json';\n\t\t}\n\t}\n\n\treturn new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): unknown => {\n\tif (options.body !== undefined) {\n\t\tif (options.mediaType?.includes('application/json') || options.mediaType?.includes('+json')) {\n\t\t\treturn JSON.stringify(options.body);\n\t\t} else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n\t\t\treturn options.body;\n\t\t} else {\n\t\t\treturn JSON.stringify(options.body);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const sendRequest = async (\n\tconfig: OpenAPIConfig,\n\toptions: ApiRequestOptions,\n\turl: string,\n\tbody: any,\n\tformData: FormData | undefined,\n\theaders: Headers,\n\tonCancel: OnCancel\n): Promise<Response> => {\n\tconst controller = new AbortController();\n\n\tlet request: RequestInit = {\n\t\theaders,\n\t\tbody: body ?? formData,\n\t\tmethod: options.method,\n\t\tsignal: controller.signal,\n\t};\n\n\tif (config.WITH_CREDENTIALS) {\n\t\trequest.credentials = config.CREDENTIALS;\n\t}\n\n\tfor (const fn of config.interceptors.request._fns) {\n\t\trequest = await fn(request);\n\t}\n\n\tonCancel(() => controller.abort());\n\n\treturn await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n\tif (responseHeader) {\n\t\tconst content = response.headers.get(responseHeader);\n\t\tif (isString(content)) {\n\t\t\treturn content;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<unknown> => {\n\tif (response.status !== 204) {\n\t\ttry {\n\t\t\tconst contentType = response.headers.get('Content-Type');\n\t\t\tif (contentType) {\n\t\t\t\tconst binaryTypes = ['application/octet-stream', 'application/pdf', 'application/zip', 'audio/', 'image/', 'video/'];\n\t\t\t\tif (contentType.includes('application/json') || contentType.includes('+json')) {\n\t\t\t\t\treturn await response.json();\n\t\t\t\t} else if (binaryTypes.some(type => contentType.includes(type))) {\n\t\t\t\t\treturn await response.blob();\n\t\t\t\t} else if (contentType.includes('multipart/form-data')) {\n\t\t\t\t\treturn await response.formData();\n\t\t\t\t} else if (contentType.includes('text/')) {\n\t\t\t\t\treturn await response.text();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\treturn undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n\tconst errors: Record<number, string> = {\n\t\t400: 'Bad Request',\n\t\t401: 'Unauthorized',\n\t\t402: 'Payment Required',\n\t\t403: 'Forbidden',\n\t\t404: 'Not Found',\n\t\t405: 'Method Not Allowed',\n\t\t406: 'Not Acceptable',\n\t\t407: 'Proxy Authentication Required',\n\t\t408: 'Request Timeout',\n\t\t409: 'Conflict',\n\t\t410: 'Gone',\n\t\t411: 'Length Required',\n\t\t412: 'Precondition Failed',\n\t\t413: 'Payload Too Large',\n\t\t414: 'URI Too Long',\n\t\t415: 'Unsupported Media Type',\n\t\t416: 'Range Not Satisfiable',\n\t\t417: 'Expectation Failed',\n\t\t418: 'Im a teapot',\n\t\t421: 'Misdirected Request',\n\t\t422: 'Unprocessable Content',\n\t\t423: 'Locked',\n\t\t424: 'Failed Dependency',\n\t\t425: 'Too Early',\n\t\t426: 'Upgrade Required',\n\t\t428: 'Precondition Required',\n\t\t429: 'Too Many Requests',\n\t\t431: 'Request Header Fields Too Large',\n\t\t451: 'Unavailable For Legal Reasons',\n\t\t500: 'Internal Server Error',\n\t\t501: 'Not Implemented',\n\t\t502: 'Bad Gateway',\n\t\t503: 'Service Unavailable',\n\t\t504: 'Gateway Timeout',\n\t\t505: 'HTTP Version Not Supported',\n\t\t506: 'Variant Also Negotiates',\n\t\t507: 'Insufficient Storage',\n\t\t508: 'Loop Detected',\n\t\t510: 'Not Extended',\n\t\t511: 'Network Authentication Required',\n\t\t...options.errors,\n\t}\n\n\tconst error = errors[result.status];\n\tif (error) {\n\t\tthrow new ApiError(options, result, error);\n\t}\n\n\tif (!result.ok) {\n\t\tconst errorStatus = result.status ?? 'unknown';\n\t\tconst errorStatusText = result.statusText ?? 'unknown';\n\t\tconst errorBody = (() => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(result.body, null, 2);\n\t\t\t} catch (e) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t})();\n\n\t\tthrow new ApiError(options, result,\n\t\t\t`Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n\t\t);\n\t}\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions<T>): CancelablePromise<T> => {\n\treturn new CancelablePromise(async (resolve, reject, onCancel) => {\n\t\ttry {\n\t\t\tconst url = getUrl(config, options);\n\t\t\tconst formData = getFormData(options);\n\t\t\tconst body = getRequestBody(options);\n\t\t\tconst headers = await getHeaders(config, options);\n\n\t\t\tif (!onCancel.isCancelled) {\n\t\t\t\tlet response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n\n\t\t\t\tfor (const fn of config.interceptors.response._fns) {\n\t\t\t\t\tresponse = await fn(response);\n\t\t\t\t}\n\n\t\t\t\tconst responseBody = await getResponseBody(response);\n\t\t\t\tconst responseHeader = getResponseHeader(response, options.responseHeader);\n\n\t\t\t\tlet transformedBody = responseBody;\n\t\t\t\tif (options.responseTransformer && response.ok) {\n\t\t\t\t\ttransformedBody = await options.responseTransformer(responseBody)\n\t\t\t\t}\n\n\t\t\t\tconst result: ApiResult = {\n\t\t\t\t\turl,\n\t\t\t\t\tok: response.ok,\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\tbody: responseHeader ?? transformedBody,\n\t\t\t\t};\n\n\t\t\t\tcatchErrorCodes(options, result);\n\n\t\t\t\tresolve(result.body);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\t});\n};","// This file is auto-generated by @hey-api/openapi-ts\n\nimport type { CancelablePromise } from './core/CancelablePromise';\nimport { OpenAPI } from './core/OpenAPI';\nimport { request as __request } from './core/request';\nimport type { GetActionsResponse, DownloadData, DownloadResponse, PerformActionData, PerformActionResponse2, ProcessUploadData, ProcessUploadResponse, CheckLegacyResponse, CopyLegacyResponse, IgnoreLegacyResponse, GetAddOnsResponse, GetAddonSplashResponse, GetHandlerSetSettingsData, GetHandlerSetSettingsResponse, GetSettingsResponse } from './types.gen';\n\nexport class ActionsService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getActions(): CancelablePromise<GetActionsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/Actions'\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestId\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static download(data: DownloadData = {}): CancelablePromise<DownloadResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/usync/api/v1/Download',\n            query: {\n                requestId: data.requestId\n            }\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.requestBody\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static performAction(data: PerformActionData = {}): CancelablePromise<PerformActionResponse2> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/usync/api/v1/Perform',\n            body: data.requestBody,\n            mediaType: 'application/json'\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.tempKey\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static processUpload(data: ProcessUploadData = {}): CancelablePromise<ProcessUploadResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/usync/api/v1/ProcessUpload',\n            query: {\n                tempKey: data.tempKey\n            }\n        });\n    }\n    \n}\n\nexport class MigrationsService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static checkLegacy(): CancelablePromise<CheckLegacyResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/CheckLegacy'\n        });\n    }\n    \n    /**\n     * @returns boolean OK\n     * @throws ApiError\n     */\n    public static copyLegacy(): CancelablePromise<CopyLegacyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/usync/api/v1/CopyLegacy'\n        });\n    }\n    \n    /**\n     * @returns boolean OK\n     * @throws ApiError\n     */\n    public static ignoreLegacy(): CancelablePromise<IgnoreLegacyResponse> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/umbraco/usync/api/v1/IgnoreLegacy'\n        });\n    }\n    \n}\n\nexport class SettingsService {\n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getAddOns(): CancelablePromise<GetAddOnsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/AddOns'\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getAddonSplash(): CancelablePromise<GetAddonSplashResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/AddOnSplash'\n        });\n    }\n    \n    /**\n     * @param data The data for the request.\n     * @param data.id\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getHandlerSetSettings(data: GetHandlerSetSettingsData = {}): CancelablePromise<GetHandlerSetSettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/HandlerSettings',\n            query: {\n                id: data.id\n            }\n        });\n    }\n    \n    /**\n     * @returns unknown OK\n     * @throws ApiError\n     */\n    public static getSettings(): CancelablePromise<GetSettingsResponse> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/umbraco/usync/api/v1/Settings'\n        });\n    }\n    \n}","// This file is auto-generated by @hey-api/openapi-ts\r\n\r\nexport type ChangeDetailType = 'NoChange' | 'Create' | 'Update' | 'Delete' | 'Error' | 'Warning';\r\n\r\nexport const ChangeDetailType = {\r\n    NO_CHANGE: 'NoChange',\r\n    CREATE: 'Create',\r\n    UPDATE: 'Update',\r\n    DELETE: 'Delete',\r\n    ERROR: 'Error',\r\n    WARNING: 'Warning'\r\n} as const;\r\n\r\nexport type ChangeType = 'NoChange' | 'Create' | 'Import' | 'Export' | 'Update' | 'Delete' | 'WillChange' | 'Information' | 'Rolledback' | 'Fail' | 'ImportFail' | 'Mismatch' | 'ParentMissing' | 'Hidden' | 'Clean' | 'Removed';\r\n\r\nexport const ChangeType = {\r\n    NO_CHANGE: 'NoChange',\r\n    CREATE: 'Create',\r\n    IMPORT: 'Import',\r\n    EXPORT: 'Export',\r\n    UPDATE: 'Update',\r\n    DELETE: 'Delete',\r\n    WILL_CHANGE: 'WillChange',\r\n    INFORMATION: 'Information',\r\n    ROLLEDBACK: 'Rolledback',\r\n    FAIL: 'Fail',\r\n    IMPORT_FAIL: 'ImportFail',\r\n    MISMATCH: 'Mismatch',\r\n    PARENT_MISSING: 'ParentMissing',\r\n    HIDDEN: 'Hidden',\r\n    CLEAN: 'Clean',\r\n    REMOVED: 'Removed'\r\n} as const;\r\n\r\nexport type EventMessageTypeModel = 'Default' | 'Info' | 'Error' | 'Success' | 'Warning';\r\n\r\nexport const EventMessageTypeModel = {\r\n    DEFAULT: 'Default',\r\n    INFO: 'Info',\r\n    ERROR: 'Error',\r\n    SUCCESS: 'Success',\r\n    WARNING: 'Warning'\r\n} as const;\r\n\r\nexport type HandlerSettings = {\r\n    enabled: boolean;\r\n    actions: Array<(string)>;\r\n    useFlatStructure: boolean;\r\n    guidNames: boolean;\r\n    failOnMissingParent: boolean;\r\n    group: string;\r\n    createClean: boolean;\r\n    settings: {\r\n        [key: string]: (string);\r\n    };\r\n};\r\n\r\nexport type HandlerStatus = 'Pending' | 'Processing' | 'Complete' | 'Error';\r\n\r\nexport const HandlerStatus = {\r\n    PENDING: 'Pending',\r\n    PROCESSING: 'Processing',\r\n    COMPLETE: 'Complete',\r\n    ERROR: 'Error'\r\n} as const;\r\n\r\nexport type NotificationHeaderModel = {\r\n    message: string;\r\n    category: string;\r\n    type: EventMessageTypeModel;\r\n};\r\n\r\nexport type PerformActionRequest = {\r\n    requestId: string;\r\n    action: string;\r\n    stepNumber: number;\r\n    options?: ((uSyncOptions) | null);\r\n    username?: (string) | null;\r\n};\r\n\r\nexport type PerformActionResponse = {\r\n    requestId: string;\r\n    status?: Array<(SyncHandlerSummary)> | null;\r\n    actions?: Array<(uSyncActionView)> | null;\r\n    complete: boolean;\r\n};\r\n\r\nexport type SyncActionButton = {\r\n    key: string;\r\n    label: string;\r\n    look: string;\r\n    color: string;\r\n    force: boolean;\r\n    clean: boolean;\r\n    file: boolean;\r\n    children: Array<(SyncActionButton)>;\r\n};\r\n\r\nexport type SyncActionGroup = {\r\n    key: string;\r\n    icon: string;\r\n    groupName: string;\r\n    buttons: Array<(SyncActionButton)>;\r\n};\r\n\r\nexport type SyncHandlerSummary = {\r\n    icon: string;\r\n    name: string;\r\n    status: HandlerStatus;\r\n    changes: number;\r\n    inError: boolean;\r\n};\r\n\r\nexport type SyncLegacyCheckResponse = {\r\n    hasLegacy: boolean;\r\n    legacyFolder?: (string) | null;\r\n    legacyTypes: Array<(string)>;\r\n    latestFolder: string;\r\n    latestVersion: string;\r\n};\r\n\r\nexport type UploadImportResult = {\r\n    success: boolean;\r\n    errors: Array<(string)>;\r\n};\r\n\r\nexport type uSyncActionView = {\r\n    key: string;\r\n    name: string;\r\n    handler: string;\r\n    itemType: string;\r\n    change: ChangeType;\r\n    success: boolean;\r\n    details: Array<(uSyncChange)>;\r\n    message?: (string) | null;\r\n};\r\n\r\nexport type uSyncAddonInfo = {\r\n    version: string;\r\n};\r\n\r\nexport type uSyncAddonSplash = {\r\n    [key: string]: unknown;\r\n};\r\n\r\nexport type uSyncChange = {\r\n    success: boolean;\r\n    name: string;\r\n    path: string;\r\n    oldValue: string;\r\n    newValue: string;\r\n    change: ChangeDetailType;\r\n};\r\n\r\nexport type uSyncHandlerSetSettings = {\r\n    enabled: boolean;\r\n    handlerGroups: Array<(string)>;\r\n    disabledHandlers: Array<(string)>;\r\n    handlerDefaults: (HandlerSettings);\r\n    handlers: {\r\n        [key: string]: (HandlerSettings);\r\n    };\r\n    isSelectable: boolean;\r\n};\r\n\r\nexport type uSyncOptions = {\r\n    clientId: string;\r\n    force: boolean;\r\n    clean: boolean;\r\n    files: boolean;\r\n    group: string;\r\n    set: string;\r\n};\r\n\r\nexport type uSyncSettings = {\r\n    rootFolder: string;\r\n    folders: Array<(string)>;\r\n    legacyFolder: string;\r\n    isRootSite: boolean;\r\n    lockRoot: boolean;\r\n    stopFile: string;\r\n    onceFile: string;\r\n    lockRootTypes: Array<(string)>;\r\n    defaultSet: string;\r\n    importAtStartup: string;\r\n    exportAtStartup: string;\r\n    exportOnSave: string;\r\n    uiEnabledGroups: string;\r\n    reportDebug: boolean;\r\n    addOnPing: boolean;\r\n    rebuildCacheOnCompletion: boolean;\r\n    failOnMissingParent: boolean;\r\n    failOnDuplicates: boolean;\r\n    cacheFolderKeys: boolean;\r\n    showVersionCheckWarning: boolean;\r\n    customMappings: {\r\n        [key: string]: (string);\r\n    };\r\n    enableHistory: boolean;\r\n    defaultExtension: string;\r\n    importOnFirstBoot: boolean;\r\n    firstBootGroup: string;\r\n    disableDashboard: boolean;\r\n    summaryDashboard: boolean;\r\n    summaryLimit: number;\r\n    hideAddOns: string;\r\n    disableNotificationSuppression: boolean;\r\n    backgroundNotifications: boolean;\r\n};\r\n\r\nexport type GetActionsResponse = (Array<(SyncActionGroup)>);\r\n\r\nexport type DownloadData = {\r\n    requestId?: string;\r\n};\r\n\r\nexport type DownloadResponse = (((Blob | File)));\r\n\r\nexport type PerformActionData = {\r\n    requestBody?: (PerformActionRequest);\r\n};\r\n\r\nexport type PerformActionResponse2 = ((PerformActionResponse));\r\n\r\nexport type ProcessUploadData = {\r\n    tempKey?: string;\r\n};\r\n\r\nexport type ProcessUploadResponse = ((UploadImportResult));\r\n\r\nexport type CheckLegacyResponse = ((SyncLegacyCheckResponse));\r\n\r\nexport type CopyLegacyResponse = (boolean);\r\n\r\nexport type IgnoreLegacyResponse = (boolean);\r\n\r\nexport type GetAddOnsResponse = ((uSyncAddonInfo));\r\n\r\nexport type GetAddonSplashResponse = ((uSyncAddonSplash));\r\n\r\nexport type GetHandlerSetSettingsData = {\r\n    id?: string;\r\n};\r\n\r\nexport type GetHandlerSetSettingsResponse = ((uSyncHandlerSetSettings));\r\n\r\nexport type GetSettingsResponse = ((uSyncSettings));","import { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { customElement, html } from '@umbraco-cms/backoffice/external/lit';\r\nimport { uSyncDetailsModalData, uSyncDetailsModalValue } from '@jumoo/uSync';\r\n\r\n@customElement('usync-details-modal')\r\nexport class uSyncDetailsModalElement extends UmbModalBaseElement<\r\n\tuSyncDetailsModalData,\r\n\tuSyncDetailsModalValue\r\n> {\r\n\t#onClose() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout headline=\"Changes : ${this.data?.item.name ?? ''}\">\r\n\t\t\t\t<uui-box .headline=${this.localize.term('uSync_detailHeadline')}>\r\n\t\t\t\t\t<div slot=\"header\">\r\n\t\t\t\t\t\t<umb-localize key=\"uSync_detailHeader\"></umb-localize>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<usync-change-view .item=${this.data?.item}></usync-change-view>\r\n\t\t\t\t</uui-box>\r\n\t\t\t\t<div slot=\"actions\">\r\n\t\t\t\t\t<uui-button\r\n\t\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\t\t.label=${this.localize.term('general_close')}\r\n\t\t\t\t\t\t@click=\"${this.#onClose}\"></uui-button>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n}\r\n\r\nexport default uSyncDetailsModalElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-details-modal': uSyncDetailsModalElement;\r\n\t}\r\n}\r\n","import { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\nimport { uSyncActionView } from '@jumoo/uSync';\r\n\r\nexport interface uSyncDetailsModalData {\r\n\titem: uSyncActionView;\r\n}\r\n\r\nexport interface uSyncDetailsModalValue {\r\n\tresult: boolean;\r\n}\r\n\r\nexport const USYNC_DETAILS_MODAL = new UmbModalToken<\r\n\tuSyncDetailsModalData,\r\n\tuSyncDetailsModalValue\r\n>('usync.details.modal', {\r\n\tmodal: {\r\n\t\ttype: 'sidebar',\r\n\t\tsize: 'large',\r\n\t},\r\n});\r\n","import { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { uSyncErrorModalData, uSyncErrorModalValue } from './error-modal-token';\r\nimport { css, customElement, html } from '@umbraco-cms/backoffice/external/lit';\r\n\r\n@customElement('usync-error-modal')\r\nexport default class uSyncErrorModalElement extends UmbModalBaseElement<\r\n\tuSyncErrorModalData,\r\n\tuSyncErrorModalValue\r\n> {\r\n\t#onClose() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst headline = `Error: ${this.data?.action.name ?? ''} [${this.data?.action.itemType}]`;\r\n\r\n\t\treturn html`<umb-body-layout .headline=${headline}>\r\n\t\t\t<strong>\r\n\t\t\t\t<umb-localize key=\"uSync_errorHeader\"></umb-localize>\r\n\t\t\t</strong>\r\n\t\t\t<div class=\"error\">${this.data?.action.message}</div>\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\t.label=${this.localize.term('general_close')}\r\n\t\t\t\t\t@click=\"${this.#onClose}\"></uui-button>\r\n\t\t\t</div>\r\n\t\t</umb-body-layout>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\tumb-body-layout {\r\n\t\t\tmax-width: 450px;\r\n\t\t}\r\n\r\n\t\t.error {\r\n\t\t\tpadding: 10px;\r\n\t\t\tfont-family: monospace;\r\n\t\t\tcolor: red;\r\n\t\t}\r\n\t`;\r\n}\r\n","import { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\nimport { uSyncActionView } from '../api';\r\n\r\nexport interface uSyncErrorModalData {\r\n\taction: uSyncActionView;\r\n}\r\n\r\nexport interface uSyncErrorModalValue {\r\n\tresult: boolean;\r\n}\r\n\r\nexport const USYNC_ERROR_MODAL = new UmbModalToken<\r\n\tuSyncErrorModalData,\r\n\tuSyncErrorModalValue\r\n>('usync.error.modal', {\r\n\tmodal: {\r\n\t\ttype: 'dialog',\r\n\t},\r\n});\r\n","import {\r\n\tclassMap,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tproperty,\r\n\tstate,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { ChangeType, uSyncActionView } from '../api';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { USYNC_ERROR_MODAL } from '../dialogs';\r\n\r\n@customElement('usync-result-group')\r\nexport class uSyncResultGroupView extends UmbLitElement {\r\n\t@state()\r\n\texpanded: boolean = false;\r\n\r\n\t@property({ type: Boolean })\r\n\tshowAll: boolean = false;\r\n\r\n\t@property({ type: Array })\r\n\tresults: Array<uSyncActionView> = [];\r\n\r\n\t@property({ type: String })\r\n\tgroupName: string = '';\r\n\r\n\tasync #showDetail(action: uSyncActionView) {\r\n\t\tif (action.change == ChangeType.NO_CHANGE) return;\r\n\r\n\t\tthis.dispatchEvent(\r\n\t\t\tnew CustomEvent<uSyncActionView>('show-detail', { detail: action }),\r\n\t\t);\r\n\t}\r\n\r\n\tgetChangeCount() {\r\n\t\treturn this.results?.filter((r) => r.change !== ChangeType.NO_CHANGE).length;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst changeCount = this.getChangeCount() ?? 0;\r\n\r\n\t\tif (changeCount === 0 && !this.showAll) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-box class=${classMap({ has_changes: changeCount > 0 })}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass=\"summary ${when(this.expanded, () => 'expanded')}\"\r\n\t\t\t\t\t@click=${() => (this.expanded = !this.expanded)}>\r\n\t\t\t\t\t<h4>${this.localize.term('uSync_' + this.groupName)}</h4>\r\n\t\t\t\t\t<h4 class=\"count\">${changeCount}/${this.results?.length}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<uui-table>\r\n\t\t\t\t\t${when(\r\n\t\t\t\t\t\tthis.expanded == true,\r\n\t\t\t\t\t\t() => html`${this.renderGroupedRows(this.results)}`,\r\n\t\t\t\t\t)}\r\n\t\t\t\t</uui-table>\r\n\t\t\t</uui-box>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderGroupedRows(results?: uSyncActionView[]) {\r\n\t\tconst rowsHtml = results?.map((result) => {\r\n\t\t\tif (!this.showAll && result.change == ChangeType.NO_CHANGE) return nothing;\r\n\r\n\t\t\tconst icon =\r\n\t\t\t\tresult.change == ChangeType.NO_CHANGE\r\n\t\t\t\t\t? 'icon-trafic'\r\n\t\t\t\t\t: result.success\r\n\t\t\t\t\t\t? 'icon-check color-green'\r\n\t\t\t\t\t\t: 'icon-wrong color-red';\r\n\r\n\t\t\treturn html`\r\n\t\t\t\t<uui-table-row\r\n\t\t\t\t\tclass=${classMap({ changerow: result.change != ChangeType.NO_CHANGE })}>\r\n\t\t\t\t\t<uui-table-cell class=\"icon-cell\" .noPadding=${true}>\r\n\t\t\t\t\t\t<umb-icon .name=${icon}></umb-icon>\r\n\t\t\t\t\t</uui-table-cell>\r\n\t\t\t\t\t<uui-table-cell\r\n\t\t\t\t\t\t@click=${() => this.#showDetail(result)}\r\n\t\t\t\t\t\t.clipText=${true}\r\n\t\t\t\t\t\tstyle=\"--uui-table-cell-padding: var(--uui-size-space-2);\">\r\n\t\t\t\t\t\t<div class=\"item-name\">\r\n\t\t\t\t\t\t\t<div>${result.name}</div>\r\n\t\t\t\t\t\t\t<div>${this.renderMessage(result)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"item-detail\">\r\n\t\t\t\t\t\t\t<div>${result.itemType}</div>\r\n\t\t\t\t\t\t\t<div>${result.change}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</uui-table-cell>\r\n\t\t\t\t</uui-table-row>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html`${rowsHtml}`;\r\n\t}\r\n\r\n\trenderMessage(result: uSyncActionView) {\r\n\t\treturn (result.change != ChangeType.FAIL &&\r\n\t\t\tresult.change != ChangeType.IMPORT_FAIL) ||\r\n\t\t\t!result.message\r\n\t\t\t? html`<em>${result.message}</em>`\r\n\t\t\t: html` <uui-button\r\n\t\t\t\t\tlook=\"default\"\r\n\t\t\t\t\tcolor=\"danger\"\r\n\t\t\t\t\tlabel=\"View error\"\r\n\t\t\t\t\tcompact\r\n\t\t\t\t\t@click=${(e: Event) => this.#viewError(e, result)}></uui-button>`;\r\n\t}\r\n\r\n\tasync #viewError(e: Event, result: uSyncActionView) {\r\n\t\te.stopPropagation();\r\n\t\tconst modalContext = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tconst modal = modalContext?.open(this, USYNC_ERROR_MODAL, {\r\n\t\t\tdata: {\r\n\t\t\t\taction: result,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst data = await modal?.onSubmit().catch(() => {\r\n\t\t\treturn;\r\n\t\t});\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\tuui-box {\r\n\t\t\tcursor: pointer;\r\n\t\t\t--uui-box-default-padding: 1px 20px;\r\n\t\t}\r\n\r\n\t\t.summary {\r\n\t\t\tdisplay: flex;\r\n\t\t\tmargin: 0 -20px;\r\n\t\t\tpadding: 0 20px;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\r\n\t\t.expanded {\r\n\t\t\tborder-bottom: 1px solid var(--uui-color-border);\r\n\t\t}\r\n\r\n\t\t.count {\r\n\t\t\tcolor: var(--uui-color-border);\r\n\t\t}\r\n\r\n\t\t.has_changes .count {\r\n\t\t\tcolor: var(--uui-text);\r\n\t\t}\r\n\r\n\t\t.changerow {\r\n\t\t\tcursor: pointer;\r\n\t\t}\r\n\r\n\t\t.icon-cell {\r\n\t\t\twidth: var(--uui-size-8);\r\n\t\t}\r\n\r\n\t\t.item-name {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\r\n\t\t.item-detail {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tfont-size: smaller;\r\n\t\t\tcolor: var(--uui-color-disabled-contrast);\r\n\t\t}\r\n\r\n\t\tuui-table-row:first-child uui-table-cell {\r\n\t\t\tborder-top-color: transparent;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncResultGroupView;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-result-group': uSyncResultGroupView;\r\n\t}\r\n}\r\n","import { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbObjectState } from '@umbraco-cms/backoffice/observable-api';\r\n\r\nimport * as signalR from '@jumoo/uSync/external/signalr';\r\nimport { USYNC_SIGNALR_CONTEXT_TOKEN, SyncUpdateMessage } from '@jumoo/uSync';\r\n\r\nexport class uSyncSignalRContext extends UmbControllerBase {\r\n\t#connection?: signalR.HubConnection;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.provideContext(USYNC_SIGNALR_CONTEXT_TOKEN, this);\r\n\t}\r\n\r\n\thostConnected(): void {\r\n\t\tsuper.hostConnected();\r\n\t\tthis.#setupConnection('/umbraco/SyncHub');\r\n\t}\r\n\r\n\thostDisconnected(): void {\r\n\t\tsuper.hostDisconnected();\r\n\t\tthis.#connection?.stop().then(() => {\r\n\t\t\tconsole.debug('connection stopped');\r\n\t\t});\r\n\t}\r\n\r\n\tgetClientId(): string | null {\r\n\t\treturn this.#connection?.connectionId ?? null;\r\n\t}\r\n\r\n\t#update = new UmbObjectState<SyncUpdateMessage | undefined>(undefined);\r\n\tpublic readonly update = this.#update.asObservable();\r\n\r\n\t#add = new UmbObjectState({});\r\n\tpublic readonly add = this.#add.asObservable();\r\n\r\n\t#setupConnection(url: string) {\r\n\t\tthis.#connection = new signalR.HubConnectionBuilder()\r\n\t\t\t.configureLogging(signalR.LogLevel.Warning)\r\n\t\t\t.withUrl(url)\r\n\t\t\t.build();\r\n\r\n\t\tthis.#connection.on('add', (data) => {\r\n\t\t\tthis.#add.setValue(data);\r\n\t\t});\r\n\r\n\t\tthis.#connection.on('update', (data) => {\r\n\t\t\tthis.#update.setValue(data);\r\n\t\t});\r\n\r\n\t\tthis.#connection.start().then(() => {\r\n\t\t\tconsole.debug('connection started');\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default uSyncSignalRContext;\r\n","import { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\nimport { uSyncSignalRContext } from '@jumoo/uSync';\r\n\r\nexport const USYNC_SIGNALR_CONTEXT_TOKEN = new UmbContextToken<uSyncSignalRContext>(\r\n\t'uSyncSignalRContext',\r\n);\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage, statusCode) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message, transport) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message, innerErrors) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.innerErrors = innerErrors;\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n//# sourceMappingURL=Errors.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    constructor(statusCode, statusText, content) {\r\n        this.statusCode = statusCode;\r\n        this.statusText = statusText;\r\n        this.content = content;\r\n    }\r\n}\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport class HttpClient {\r\n    get(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n    post(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n    delete(url, options) {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    getCookieString(url) {\r\n        return \"\";\r\n    }\r\n}\r\n//# sourceMappingURL=HttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport var LogLevel;\r\n(function (LogLevel) {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\r\n    /** Log level for low severity diagnostic messages. */\r\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\r\n    /** Log level for informational diagnostic messages. */\r\n    LogLevel[LogLevel[\"Information\"] = 2] = \"Information\";\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    LogLevel[LogLevel[\"None\"] = 6] = \"None\";\r\n})(LogLevel || (LogLevel = {}));\r\n//# sourceMappingURL=ILogger.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger {\r\n    constructor() { }\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    log(_logLevel, _message) {\r\n    }\r\n}\r\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\nNullLogger.instance = new NullLogger();\r\n//# sourceMappingURL=Loggers.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"8.0.7\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n//# sourceMappingURL=Utils.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        // Node added a fetch implementation to the global scope starting in v18.\r\n        // We need to add a cookie jar in node to be able to share cookies with WebSocket\r\n        if (typeof fetch === \"undefined\" || Platform.isNode) {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            if (typeof fetch === \"undefined\") {\r\n                this._fetchType = requireFunc(\"node-fetch\");\r\n            }\r\n            else {\r\n                // Use fetch from Node if available\r\n                this._fetchType = fetch;\r\n            }\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n//# sourceMappingURL=FetchHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\nexport class XhrHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(request.method, request.url, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                }\r\n                else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                });\r\n            }\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                }\r\n                else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=XhrHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    constructor(logger) {\r\n        super();\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        }\r\n        else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        }\r\n        else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n        return this._httpClient.send(request);\r\n    }\r\n    getCookieString(url) {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    static write(output) {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n    static parse(input) {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\nTextMessageFormat.RecordSeparatorCode = 0x1e;\r\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n//# sourceMappingURL=TextMessageFormat.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    writeHandshakeRequest(handshakeRequest) {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n    parseHandshakeResponse(data) {\r\n        let messageData;\r\n        let remainingData;\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        }\r\n        else {\r\n            const textData = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage = response;\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n//# sourceMappingURL=HandshakeProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n/** Defines the type of a Hub Message. */\r\nexport var MessageType;\r\n(function (MessageType) {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    MessageType[MessageType[\"Invocation\"] = 1] = \"Invocation\";\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    MessageType[MessageType[\"StreamItem\"] = 2] = \"StreamItem\";\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    MessageType[MessageType[\"Completion\"] = 3] = \"Completion\";\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    MessageType[MessageType[\"StreamInvocation\"] = 4] = \"StreamInvocation\";\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    MessageType[MessageType[\"CancelInvocation\"] = 5] = \"CancelInvocation\";\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    MessageType[MessageType[\"Ping\"] = 6] = \"Ping\";\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    MessageType[MessageType[\"Close\"] = 7] = \"Close\";\r\n    MessageType[MessageType[\"Ack\"] = 8] = \"Ack\";\r\n    MessageType[MessageType[\"Sequence\"] = 9] = \"Sequence\";\r\n})(MessageType || (MessageType = {}));\r\n//# sourceMappingURL=IHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { SubjectSubscription } from \"./Utils\";\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n    next(item) {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n    error(err) {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n    complete() {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n    subscribe(observer) {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n//# sourceMappingURL=Subject.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n/** @private */\r\nexport class MessageBuffer {\r\n    constructor(protocol, connection, bufferSize) {\r\n        this._bufferSize = 100000;\r\n        this._messages = [];\r\n        this._totalMessageCount = 0;\r\n        this._waitForSequenceMessage = false;\r\n        // Message IDs start at 1 and always increment by 1\r\n        this._nextReceivingSequenceId = 1;\r\n        this._latestReceivedSequenceId = 0;\r\n        this._bufferedByteCount = 0;\r\n        this._reconnectInProgress = false;\r\n        this._protocol = protocol;\r\n        this._connection = connection;\r\n        this._bufferSize = bufferSize;\r\n    }\r\n    async _send(message) {\r\n        const serializedMessage = this._protocol.writeMessage(message);\r\n        let backpressurePromise = Promise.resolve();\r\n        // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect\r\n        if (this._isInvocationMessage(message)) {\r\n            this._totalMessageCount++;\r\n            let backpressurePromiseResolver = () => { };\r\n            let backpressurePromiseRejector = () => { };\r\n            if (isArrayBuffer(serializedMessage)) {\r\n                this._bufferedByteCount += serializedMessage.byteLength;\r\n            }\r\n            else {\r\n                this._bufferedByteCount += serializedMessage.length;\r\n            }\r\n            if (this._bufferedByteCount >= this._bufferSize) {\r\n                backpressurePromise = new Promise((resolve, reject) => {\r\n                    backpressurePromiseResolver = resolve;\r\n                    backpressurePromiseRejector = reject;\r\n                });\r\n            }\r\n            this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount, backpressurePromiseResolver, backpressurePromiseRejector));\r\n        }\r\n        try {\r\n            // If this is set it means we are reconnecting or resending\r\n            // We don't want to send on a disconnected connection\r\n            // And we don't want to send if resend is running since that would mean sending\r\n            // this message twice\r\n            if (!this._reconnectInProgress) {\r\n                await this._connection.send(serializedMessage);\r\n            }\r\n        }\r\n        catch {\r\n            this._disconnected();\r\n        }\r\n        await backpressurePromise;\r\n    }\r\n    _ack(ackMessage) {\r\n        let newestAckedMessage = -1;\r\n        // Find index of newest message being acked\r\n        for (let index = 0; index < this._messages.length; index++) {\r\n            const element = this._messages[index];\r\n            if (element._id <= ackMessage.sequenceId) {\r\n                newestAckedMessage = index;\r\n                if (isArrayBuffer(element._message)) {\r\n                    this._bufferedByteCount -= element._message.byteLength;\r\n                }\r\n                else {\r\n                    this._bufferedByteCount -= element._message.length;\r\n                }\r\n                // resolve items that have already been sent and acked\r\n                element._resolver();\r\n            }\r\n            else if (this._bufferedByteCount < this._bufferSize) {\r\n                // resolve items that now fall under the buffer limit but haven't been acked\r\n                element._resolver();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (newestAckedMessage !== -1) {\r\n            // We're removing everything including the message pointed to, so add 1\r\n            this._messages = this._messages.slice(newestAckedMessage + 1);\r\n        }\r\n    }\r\n    _shouldProcessMessage(message) {\r\n        if (this._waitForSequenceMessage) {\r\n            if (message.type !== MessageType.Sequence) {\r\n                return false;\r\n            }\r\n            else {\r\n                this._waitForSequenceMessage = false;\r\n                return true;\r\n            }\r\n        }\r\n        // No special processing for acks, pings, etc.\r\n        if (!this._isInvocationMessage(message)) {\r\n            return true;\r\n        }\r\n        const currentId = this._nextReceivingSequenceId;\r\n        this._nextReceivingSequenceId++;\r\n        if (currentId <= this._latestReceivedSequenceId) {\r\n            if (currentId === this._latestReceivedSequenceId) {\r\n                // Should only hit this if we just reconnected and the server is sending\r\n                // Messages it has buffered, which would mean it hasn't seen an Ack for these messages\r\n                this._ackTimer();\r\n            }\r\n            // Ignore, this is a duplicate message\r\n            return false;\r\n        }\r\n        this._latestReceivedSequenceId = currentId;\r\n        // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves\r\n        // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)\r\n        this._ackTimer();\r\n        return true;\r\n    }\r\n    _resetSequence(message) {\r\n        if (message.sequenceId > this._nextReceivingSequenceId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._connection.stop(new Error(\"Sequence ID greater than amount of messages we've received.\"));\r\n            return;\r\n        }\r\n        this._nextReceivingSequenceId = message.sequenceId;\r\n    }\r\n    _disconnected() {\r\n        this._reconnectInProgress = true;\r\n        this._waitForSequenceMessage = true;\r\n    }\r\n    async _resend() {\r\n        const sequenceId = this._messages.length !== 0\r\n            ? this._messages[0]._id\r\n            : this._totalMessageCount + 1;\r\n        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Sequence, sequenceId }));\r\n        // Get a local variable to the _messages, just in case messages are acked while resending\r\n        // Which would slice the _messages array (which creates a new copy)\r\n        const messages = this._messages;\r\n        for (const element of messages) {\r\n            await this._connection.send(element._message);\r\n        }\r\n        this._reconnectInProgress = false;\r\n    }\r\n    _dispose(error) {\r\n        error !== null && error !== void 0 ? error : (error = new Error(\"Unable to reconnect to server.\"));\r\n        // Unblock backpressure if any\r\n        for (const element of this._messages) {\r\n            element._rejector(error);\r\n        }\r\n    }\r\n    _isInvocationMessage(message) {\r\n        // There is no way to check if something implements an interface.\r\n        // So we individually check the messages in a switch statement.\r\n        // To make sure we don't miss any message types we rely on the compiler\r\n        // seeing the function returns a value and it will do the\r\n        // exhaustive check for us on the switch statement, since we don't use 'case default'\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n            case MessageType.StreamInvocation:\r\n            case MessageType.CancelInvocation:\r\n                return true;\r\n            case MessageType.Close:\r\n            case MessageType.Sequence:\r\n            case MessageType.Ping:\r\n            case MessageType.Ack:\r\n                return false;\r\n        }\r\n    }\r\n    _ackTimer() {\r\n        if (this._ackTimerHandle === undefined) {\r\n            this._ackTimerHandle = setTimeout(async () => {\r\n                try {\r\n                    if (!this._reconnectInProgress) {\r\n                        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Ack, sequenceId: this._latestReceivedSequenceId }));\r\n                    }\r\n                    // Ignore errors, that means the connection is closed and we don't care about the Ack message anymore.\r\n                }\r\n                catch { }\r\n                clearTimeout(this._ackTimerHandle);\r\n                this._ackTimerHandle = undefined;\r\n                // 1 second delay so we don't spam Ack messages if there are many messages being received at once.\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\nclass BufferedItem {\r\n    constructor(message, id, resolver, rejector) {\r\n        this._message = message;\r\n        this._id = id;\r\n        this._resolver = resolver;\r\n        this._rejector = rejector;\r\n    }\r\n}\r\n//# sourceMappingURL=MessageBuffer.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HandshakeProtocol } from \"./HandshakeProtocol\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nimport { MessageBuffer } from \"./MessageBuffer\";\r\nconst DEFAULT_TIMEOUT_IN_MS = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;\r\nconst DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100000;\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport var HubConnectionState;\r\n(function (HubConnectionState) {\r\n    /** The hub connection is disconnected. */\r\n    HubConnectionState[\"Disconnected\"] = \"Disconnected\";\r\n    /** The hub connection is connecting. */\r\n    HubConnectionState[\"Connecting\"] = \"Connecting\";\r\n    /** The hub connection is connected. */\r\n    HubConnectionState[\"Connected\"] = \"Connected\";\r\n    /** The hub connection is disconnecting. */\r\n    HubConnectionState[\"Disconnecting\"] = \"Disconnecting\";\r\n    /** The hub connection is reconnecting. */\r\n    HubConnectionState[\"Reconnecting\"] = \"Reconnecting\";\r\n})(HubConnectionState || (HubConnectionState = {}));\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    static create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);\r\n    }\r\n    constructor(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {\r\n        this._nextKeepAlive = 0;\r\n        this._freezeEventListener = () => {\r\n            this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n        };\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;\r\n        this._statefulReconnectBufferSize = statefulReconnectBufferSize !== null && statefulReconnectBufferSize !== void 0 ? statefulReconnectBufferSize : DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n        this.connection.onreceive = (data) => this._processIncomingData(data);\r\n        this.connection.onclose = (error) => this._connectionClosed(error);\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state() {\r\n        return this._connectionState;\r\n    }\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId() {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl() {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n        this.connection.baseUrl = url;\r\n    }\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    start() {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n    async _startWithStateTransitions() {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n        try {\r\n            await this._startInternal();\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        }\r\n        catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n        await this.connection.start(this._protocol.transferFormat);\r\n        try {\r\n            let version = this._protocol.version;\r\n            if (!this.connection.features.reconnect) {\r\n                // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to\r\n                // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.\r\n                version = 1;\r\n            }\r\n            const handshakeRequest = {\r\n                protocol: this._protocol.name,\r\n                version,\r\n            };\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n            await handshakePromise;\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n            const useStatefulReconnect = this.connection.features.reconnect || false;\r\n            if (useStatefulReconnect) {\r\n                this._messageBuffer = new MessageBuffer(this._protocol, this.connection, this._statefulReconnectBufferSize);\r\n                this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);\r\n                this.connection.features.resend = () => {\r\n                    if (this._messageBuffer) {\r\n                        return this._messageBuffer._resend();\r\n                    }\r\n                };\r\n            }\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    async stop() {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this.connection.features.reconnect = false;\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n    _stopInternal(error) {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        const state = this._connectionState;\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n        if (state === HubConnectionState.Connected) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._sendCloseMessage();\r\n        }\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n    async _sendCloseMessage() {\r\n        try {\r\n            await this._sendWithProtocol(this._createCloseMessage());\r\n        }\r\n        catch {\r\n            // Ignore, this is a best effort attempt to let the server know the client closed gracefully.\r\n        }\r\n    }\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    stream(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue;\r\n        const subject = new Subject();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            }\r\n            else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    }\r\n                    else {\r\n                        subject.complete();\r\n                    }\r\n                }\r\n                else {\r\n                    subject.next((invocationEvent.item));\r\n                }\r\n            }\r\n        };\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n            subject.error(e);\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n        });\r\n        this._launchStreams(streams, promiseQueue);\r\n        return subject;\r\n    }\r\n    _sendMessage(message) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    _sendWithProtocol(message) {\r\n        if (this._messageBuffer) {\r\n            return this._messageBuffer._send(message);\r\n        }\r\n        else {\r\n            return this._sendMessage(this._protocol.writeMessage(message));\r\n        }\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    send(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n        this._launchStreams(streams, sendPromise);\r\n        return sendPromise;\r\n    }\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    invoke(methodName, ...args) {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n        const p = new Promise((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                }\r\n                else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        }\r\n                        else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                reject(e);\r\n                // invocationId will always have a value for a non-blocking invocation\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n        return p;\r\n    }\r\n    on(methodName, newMethod) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n    off(methodName, method) {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            delete this._methods[methodName];\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    onclose(callback) {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    onreconnecting(callback) {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    onreconnected(callback) {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n    _processIncomingData(data) {\r\n        this._cleanupTimeout();\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n            for (const message of messages) {\r\n                if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {\r\n                    // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message\r\n                    continue;\r\n                }\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message)\r\n                            .catch((e) => {\r\n                            this._logger.log(LogLevel.Error, `Invoke client method threw error: ${getErrorString(e)}`);\r\n                        });\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            }\r\n                            catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        }\r\n                        else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ack:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._ack(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Sequence:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._resetSequence(message);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        this._resetTimeoutPeriod();\r\n    }\r\n    _processHandshakeResponse(data) {\r\n        let responseMessage;\r\n        let remainingData;\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        }\r\n        catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n    _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n        this._cleanupPingTimer();\r\n    }\r\n    _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined) {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        }\r\n                        catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n    async _invokeClientMethod(invocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            }\r\n            catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, `${exception}`, null);\r\n            }\r\n            else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        }\r\n        else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n    _connectionClosed(error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        }\r\n        else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n    _completeClose(error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (this._messageBuffer) {\r\n                this._messageBuffer._dispose(error !== null && error !== void 0 ? error : new Error(\"Connection closed.\"));\r\n                this._messageBuffer = undefined;\r\n            }\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    async _reconnect(error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n            try {\r\n                await this._startInternal();\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    }\r\n                    catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n        this._completeClose();\r\n    }\r\n    _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {\r\n        try {\r\n            return this._reconnectPolicy.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n    _cancelCallbacksWithError(error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n            const callback = callbacks[key];\r\n            try {\r\n                callback(null, error);\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n            }\r\n        });\r\n    }\r\n    _cleanupPingTimer() {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n    _cleanupTimeout() {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n    _createInvocation(methodName, args, nonblocking, streamIds) {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n    _launchStreams(streams, promiseQueue) {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    }\r\n                    else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    }\r\n                    else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n    _replaceStreamingParams(args) {\r\n        const streams = [];\r\n        const streamIds = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n        return [streams, streamIds];\r\n    }\r\n    _isObservable(arg) {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n    _createStreamInvocation(methodName, args, streamIds) {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n    _createCancelInvocation(id) {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n    _createStreamItemMessage(id, item) {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n    _createCompletionMessage(id, error, result) {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n    _createCloseMessage() {\r\n        return { type: MessageType.Close };\r\n    }\r\n}\r\n//# sourceMappingURL=HubConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n/** @private */\r\nexport class DefaultReconnectPolicy {\r\n    constructor(retryDelays) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n    nextRetryDelayInMilliseconds(retryContext) {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n//# sourceMappingURL=DefaultReconnectPolicy.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nexport class HeaderNames {\r\n}\r\nHeaderNames.Authorization = \"Authorization\";\r\nHeaderNames.Cookie = \"Cookie\";\r\n//# sourceMappingURL=HeaderNames.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    constructor(innerClient, accessTokenFactory) {\r\n        super();\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n    async send(request) {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n    _setAuthorizationHeader(request) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`;\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n    getCookieString(url) {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}\r\n//# sourceMappingURL=AccessTokenHttpClient.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport var HttpTransportType;\r\n(function (HttpTransportType) {\r\n    /** Specifies no transport preference. */\r\n    HttpTransportType[HttpTransportType[\"None\"] = 0] = \"None\";\r\n    /** Specifies the WebSockets transport. */\r\n    HttpTransportType[HttpTransportType[\"WebSockets\"] = 1] = \"WebSockets\";\r\n    /** Specifies the Server-Sent Events transport. */\r\n    HttpTransportType[HttpTransportType[\"ServerSentEvents\"] = 2] = \"ServerSentEvents\";\r\n    /** Specifies the Long Polling transport. */\r\n    HttpTransportType[HttpTransportType[\"LongPolling\"] = 4] = \"LongPolling\";\r\n})(HttpTransportType || (HttpTransportType = {}));\r\n/** Specifies the transfer format for a connection. */\r\nexport var TransferFormat;\r\n(function (TransferFormat) {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Text\"] = 1] = \"Text\";\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    TransferFormat[TransferFormat[\"Binary\"] = 2] = \"Binary\";\r\n})(TransferFormat || (TransferFormat = {}));\r\n//# sourceMappingURL=ITransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController {\r\n    constructor() {\r\n        this._isAborted = false;\r\n        this.onabort = null;\r\n    }\r\n    abort() {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n    get signal() {\r\n        return this;\r\n    }\r\n    get aborted() {\r\n        return this._isAborted;\r\n    }\r\n}\r\n//# sourceMappingURL=AbortController.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport {\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    get pollAborted() {\r\n        return this._pollAbort.aborted;\r\n    }\r\n    constructor(httpClient, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n        this._running = false;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._url = url;\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n        const pollOptions = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        }\r\n        else {\r\n            this._running = true;\r\n        }\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n    async _poll(url, pollOptions) {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n                        this._running = false;\r\n                    }\r\n                    else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    }\r\n                    else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        }\r\n                        else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    }\r\n                    else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                        else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n    async send(data) {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    async stop() {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n        try {\r\n            await this._receiving;\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n            const headers = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n            const deleteOptions = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n            let error;\r\n            try {\r\n                await this._httpClient.delete(this._url, deleteOptions);\r\n            }\r\n            catch (err) {\r\n                error = err;\r\n            }\r\n            if (error) {\r\n                if (error instanceof HttpError) {\r\n                    if (error.statusCode === 404) {\r\n                        this._logger.log(LogLevel.Trace, \"(LongPolling transport) A 404 response was returned from sending a DELETE request.\");\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Error sending a DELETE request: ${error}`);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n            }\r\n        }\r\n        finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n    _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=LongPollingTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\n/** @private */\r\nexport class ServerSentEventsTransport {\r\n    constructor(httpClient, accessToken, logger, options) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n            let eventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials });\r\n            }\r\n            else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                eventSource = new this._options.EventSource(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers } });\r\n            }\r\n            try {\r\n                eventSource.onmessage = (e) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        }\r\n                        catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    }\r\n                    else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            }\r\n            catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n    async send(data) {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url, data, this._options);\r\n    }\r\n    stop() {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n    _close(e) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ServerSentEventsTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n/** @private */\r\nexport class WebSocketTransport {\r\n    constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n    async connect(url, transferFormat) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n        let token;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n            webSocket.onopen = (_event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n            webSocket.onerror = (event) => {\r\n                let error = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                }\r\n                else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n            webSocket.onmessage = (message) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    }\r\n                    catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n            webSocket.onclose = (event) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                }\r\n                else {\r\n                    let error = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    }\r\n                    else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                            + \" either the endpoint may not be a SignalR endpoint,\"\r\n                            + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                            + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n    send(data) {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n    stop() {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _close(event) {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => { };\r\n            this._webSocket.onmessage = () => { };\r\n            this._webSocket.onerror = () => { };\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            }\r\n            else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            }\r\n            else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n    _isCloseEvent(event) {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n//# sourceMappingURL=WebSocketTransport.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\nconst MAX_REDIRECTS = 100;\r\n/** @private */\r\nexport class HttpConnection {\r\n    constructor(url, options = {}) {\r\n        this._stopPromiseResolver = () => { };\r\n        this.features = {};\r\n        this._negotiateVersion = 1;\r\n        Arg.isRequired(url, \"url\");\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        }\r\n        else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n        let webSocketModule = null;\r\n        let eventSourceModule = null;\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        }\r\n        else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        }\r\n        else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n    async start(transferFormat) {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n        if (this._connectionState !== \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n        this._connectionState = \"Connecting\" /* ConnectionState.Connecting */;\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        else if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n        this._connectionStarted = true;\r\n    }\r\n    send(data) {\r\n        if (this._connectionState !== \"Connected\" /* ConnectionState.Connected */) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport);\r\n        }\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n    async stop(error) {\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n        this._connectionState = \"Disconnecting\" /* ConnectionState.Disconnecting */;\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n    async _stopInternal(error) {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n        try {\r\n            await this._startInternalPromise;\r\n        }\r\n        catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n            this.transport = undefined;\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n    async _startInternal(transferFormat) {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                }\r\n                else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            }\r\n            else {\r\n                let negotiateResponse = null;\r\n                let redirects = 0;\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */ || this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n                    if (negotiateResponse.ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n                    redirects++;\r\n                } while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n            if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = \"Connected\" /* ConnectionState.Connected */;\r\n            }\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        }\r\n        catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n            this.transport = undefined;\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    async _getNegotiationResponse(url) {\r\n        const headers = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n            const negotiateResponse = JSON.parse(response.content);\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            if (negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true) {\r\n                return Promise.reject(new FailedToNegotiateWithServerError(\"Client didn't negotiate Stateful Reconnect but the server did.\"));\r\n            }\r\n            return negotiateResponse;\r\n        }\r\n        catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n    _createConnectUrl(url, connectionToken) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n    async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n        const transportExceptions = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, (negotiate === null || negotiate === void 0 ? void 0 : negotiate.useStatefulReconnect) === true);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            }\r\n            else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    }\r\n                    catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                }\r\n                catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n                    if (this._connectionState !== \"Connecting\" /* ConnectionState.Connecting */) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n    _constructTransport(transport) {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n    _startTransport(url, transferFormat) {\r\n        this.transport.onreceive = this.onreceive;\r\n        if (this.features.reconnect) {\r\n            this.transport.onclose = async (e) => {\r\n                let callStop = false;\r\n                if (this.features.reconnect) {\r\n                    try {\r\n                        this.features.disconnected();\r\n                        await this.transport.connect(url, transferFormat);\r\n                        await this.features.resend();\r\n                    }\r\n                    catch {\r\n                        callStop = true;\r\n                    }\r\n                }\r\n                else {\r\n                    this._stopConnection(e);\r\n                    return;\r\n                }\r\n                if (callStop) {\r\n                    this._stopConnection(e);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            this.transport.onclose = (e) => this._stopConnection(e);\r\n        }\r\n        return this.transport.connect(url, transferFormat);\r\n    }\r\n    _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, useStatefulReconnect) {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        }\r\n        else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    }\r\n                    else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            this.features.reconnect = transport === HttpTransportType.WebSockets ? useStatefulReconnect : undefined;\r\n                            return this._constructTransport(transport);\r\n                        }\r\n                        catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            }\r\n            else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n    _isITransport(transport) {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n    _stopConnection(error) {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n        this.transport = undefined;\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n        if (this._connectionState === \"Disconnected\" /* ConnectionState.Disconnected */) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n        if (this._connectionState === \"Connecting\" /* ConnectionState.Connecting */) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n        if (this._connectionState === \"Disconnecting\" /* ConnectionState.Disconnecting */) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        }\r\n        else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n        this.connectionId = undefined;\r\n        this._connectionState = \"Disconnected\" /* ConnectionState.Disconnected */;\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n    _resolveUrl(url) {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n    _resolveNegotiateUrl(url) {\r\n        const negotiateUrl = new URL(url);\r\n        if (negotiateUrl.pathname.endsWith('/')) {\r\n            negotiateUrl.pathname += \"negotiate\";\r\n        }\r\n        else {\r\n            negotiateUrl.pathname += \"/negotiate\";\r\n        }\r\n        const searchParams = new URLSearchParams(negotiateUrl.searchParams);\r\n        if (!searchParams.has(\"negotiateVersion\")) {\r\n            searchParams.append(\"negotiateVersion\", this._negotiateVersion.toString());\r\n        }\r\n        if (searchParams.has(\"useStatefulReconnect\")) {\r\n            if (searchParams.get(\"useStatefulReconnect\") === \"true\") {\r\n                this._options._useStatefulReconnect = true;\r\n            }\r\n        }\r\n        else if (this._options._useStatefulReconnect === true) {\r\n            searchParams.append(\"useStatefulReconnect\", \"true\");\r\n        }\r\n        negotiateUrl.search = searchParams.toString();\r\n        return negotiateUrl.toString();\r\n    }\r\n}\r\nfunction transportMatches(requestedTransport, actualTransport) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    constructor(_transport) {\r\n        this._transport = _transport;\r\n        this._buffer = [];\r\n        this._executing = true;\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n    send(data) {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n    stop() {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n    _bufferData(data) {\r\n        if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {\r\n            throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);\r\n        }\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n    async _sendLoop() {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n                break;\r\n            }\r\n            this._sendBufferedData = new PromiseSource();\r\n            const transportResult = this._transportResult;\r\n            this._transportResult = undefined;\r\n            const data = typeof (this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n            this._buffer.length = 0;\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            }\r\n            catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n    static _concatBuffers(arrayBuffers) {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n        return result.buffer;\r\n    }\r\n}\r\nclass PromiseSource {\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n    resolve() {\r\n        this._resolver();\r\n    }\r\n    reject(reason) {\r\n        this._rejecter(reason);\r\n    }\r\n}\r\n//# sourceMappingURL=HttpConnection.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { MessageType } from \"./IHubProtocol\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nconst JSON_HUB_PROTOCOL_NAME = \"json\";\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol {\r\n    constructor() {\r\n        /** @inheritDoc */\r\n        this.name = JSON_HUB_PROTOCOL_NAME;\r\n        /** @inheritDoc */\r\n        this.version = 2;\r\n        /** @inheritDoc */\r\n        this.transferFormat = TransferFormat.Text;\r\n    }\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input, logger) {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n        if (!input) {\r\n            return [];\r\n        }\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message);\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                case MessageType.Ack:\r\n                    this._isAckMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Sequence:\r\n                    this._isSequenceMessage(parsedMessage);\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n        return hubMessages;\r\n    }\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message) {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n    _isInvocationMessage(message) {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n    _isStreamItemMessage(message) {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n    _isCompletionMessage(message) {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n    _isAckMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Ack message.\");\r\n        }\r\n    }\r\n    _isSequenceMessage(message) {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Sequence message.\");\r\n        }\r\n    }\r\n    _assertNotEmptyString(value, errorMessage) {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=JsonHubProtocol.js.map","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\nfunction parseLogLevel(name) {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    }\r\n    else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    configureLogging(logging) {\r\n        Arg.isRequired(logging, \"logging\");\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        }\r\n        else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        }\r\n        else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n        return this;\r\n    }\r\n    withUrl(url, transportTypeOrOptions) {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n        this.url = url;\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        }\r\n        else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    withHubProtocol(protocol) {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n    withAutomaticReconnect(retryDelaysOrReconnectPolicy) {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        }\r\n        else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        }\r\n        else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withServerTimeout(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._serverTimeoutInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withKeepAliveInterval(milliseconds) {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n        this._keepAliveIntervalInMilliseconds = milliseconds;\r\n        return this;\r\n    }\r\n    /** Enables and configures options for the Stateful Reconnect feature.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    withStatefulReconnect(options) {\r\n        if (this.httpConnectionOptions === undefined) {\r\n            this.httpConnectionOptions = {};\r\n        }\r\n        this.httpConnectionOptions._useStatefulReconnect = true;\r\n        this._statefulReconnectBufferSize = options === null || options === void 0 ? void 0 : options.bufferSize;\r\n        return this;\r\n    }\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    build() {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n        return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds, this._statefulReconnectBufferSize);\r\n    }\r\n}\r\nfunction isLogger(logger) {\r\n    return logger.log !== undefined;\r\n}\r\n//# sourceMappingURL=HubConnectionBuilder.js.map","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport {\r\n\tuSyncActionDataSource,\r\n\tuSyncSettingsDataSource,\r\n\tuSyncMigrationDataSource,\r\n} from '@jumoo/uSync';\r\n\r\n/**\r\n * Request object when peforming an action.\r\n */\r\nexport type SyncPerformRequest = {\r\n\t/** Id of the request */\r\n\tid: string;\r\n\r\n\t/** group (e.g settings, content) */\r\n\tgroup: string;\r\n\r\n\t/** action (report, export, etc) */\r\n\taction: string;\r\n\r\n\t/** current step number */\r\n\tstep: number;\r\n\r\n\t/** force (import) */\r\n\tforce?: boolean;\r\n\r\n\t/** clean disk first (export) */\r\n\tclean?: boolean;\r\n\r\n\t/** produces or expects a file */\r\n\tfile?: boolean;\r\n\r\n\t/** name of the set to use */\r\n\tset?: string;\r\n\r\n\t/** signalR client id */\r\n\tclientId: string;\r\n};\r\n\r\n/**\r\n * Repository for all things actions.\r\n */\r\nexport class uSyncActionRepository extends UmbControllerBase {\r\n\t#actionDataSource: uSyncActionDataSource;\r\n\t#settingsDataSource: uSyncSettingsDataSource;\r\n\t#migrartionDataSource: uSyncMigrationDataSource;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\t\tthis.#actionDataSource = new uSyncActionDataSource(this);\r\n\t\tthis.#settingsDataSource = new uSyncSettingsDataSource(this);\r\n\t\tthis.#migrartionDataSource = new uSyncMigrationDataSource(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Get the list of possible actions from the server\r\n\t * @returns Promise\r\n\t */\r\n\tasync getActions() {\r\n\t\treturn this.#actionDataSource.getActions();\r\n\t}\r\n\r\n\t/**\r\n\t * Request of the action to perform\r\n\t * @returns PerformActionResponse.\r\n\t */\r\n\tasync performAction(request: SyncPerformRequest) {\r\n\t\treturn this.#actionDataSource.performAction({\r\n\t\t\trequestId: request.id,\r\n\t\t\taction: request.action,\r\n\t\t\toptions: {\r\n\t\t\t\tgroup: request.group,\r\n\t\t\t\tforce: request.force ?? false,\r\n\t\t\t\tclean: request.clean ?? false,\r\n\t\t\t\tfiles: request.file ?? false,\r\n\t\t\t\tclientId: request.clientId,\r\n\t\t\t\tset: request.set ?? 'Default',\r\n\t\t\t},\r\n\t\t\tstepNumber: request.step,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Retreives the current uSync settings\r\n\t * @returns the current uSync settings\r\n\t */\r\n\tasync getSettings() {\r\n\t\treturn await this.#settingsDataSource.getSettings();\r\n\t}\r\n\r\n\tasync getAddons() {\r\n\t\treturn await this.#settingsDataSource.getAddons();\r\n\t}\r\n\r\n\t/**\r\n\t * Get the handler settings based on the set.\r\n\t * @param setName name of the handler set in the configuration\r\n\t * @returns the settings for the named handler set.\r\n\t */\r\n\tasync getHandlerSettings(setName: string) {\r\n\t\treturn await this.#settingsDataSource.getHandlerSettings(setName);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks to see if there are legacy datatypes on disk.\r\n\t * @returns results of a check for legacy files\r\n\t */\r\n\tasync checkLegacy() {\r\n\t\treturn await this.#migrartionDataSource.checkLegacy();\r\n\t}\r\n\r\n\t/**\r\n\t * sets a .ignore folder in the legacy folder so we don't detect it next time.\r\n\t * @returns true if the legacy folder is ignored.\r\n\t */\r\n\tasync ignoreLegacy() {\r\n\t\treturn await this.#migrartionDataSource.ignoreLegacy();\r\n\t}\r\n\r\n\t/**\r\n\t * copies the legacy folder to the new v14 folder.\r\n\t * @returns true if the legacy folder is copied to the new folder.\r\n\t */\r\n\tasync copyLegacy() {\r\n\t\treturn await this.#migrartionDataSource.copyLegacy();\r\n\t}\r\n\r\n\tasync downloadFile(requestId: string) {\r\n\t\treturn (await this.#actionDataSource.downloadFile(requestId)).data;\r\n\t}\r\n\r\n\tasync processUpload(fileId: string) {\r\n\t\treturn (await this.#actionDataSource.processUpload(fileId)).data;\r\n\t}\r\n}\r\n","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport {\r\n\tActionsService,\r\n\tPerformActionRequest,\r\n\tPerformActionResponse,\r\n\tSyncActionGroup,\r\n} from '@jumoo/uSync';\r\n\r\nexport interface SyncActionDataSource {\r\n\tgetActions(): Promise<UmbDataSourceResponse<unknown>>;\r\n\tperformAction(\r\n\t\trequest: PerformActionRequest,\r\n\t): Promise<UmbDataSourceResponse<PerformActionResponse>>;\r\n}\r\n\r\nexport class uSyncActionDataSource implements SyncActionDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync getActions(): Promise<UmbDataSourceResponse<Array<SyncActionGroup>>> {\r\n\t\treturn await tryExecuteAndNotify(this.#host, ActionsService.getActions());\r\n\t}\r\n\r\n\tasync performAction(\r\n\t\trequest: PerformActionRequest,\r\n\t): Promise<UmbDataSourceResponse<PerformActionResponse>> {\r\n\t\treturn await tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tActionsService.performAction({\r\n\t\t\t\trequestBody: request,\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\tasync downloadFile(requestId: string) {\r\n\t\treturn await tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tActionsService.download({\r\n\t\t\t\trequestId: requestId,\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\tasync processUpload(fileId: string) {\r\n\t\treturn await tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tActionsService.processUpload({\r\n\t\t\t\ttempKey: fileId,\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n}\r\n","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { MigrationsService, SyncLegacyCheckResponse } from '@jumoo/uSync';\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\n\r\nexport interface SyncMigrationDataSource {\r\n\tcheckLegacy(): Promise<UmbDataSourceResponse<SyncLegacyCheckResponse>>;\r\n}\r\n\r\nexport class uSyncMigrationDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync checkLegacy(): Promise<UmbDataSourceResponse<SyncLegacyCheckResponse>> {\r\n\t\treturn await tryExecuteAndNotify(this.#host, MigrationsService.checkLegacy());\r\n\t}\r\n\r\n\tasync ignoreLegacy(): Promise<UmbDataSourceResponse<boolean>> {\r\n\t\treturn await tryExecuteAndNotify(this.#host, MigrationsService.ignoreLegacy());\r\n\t}\r\n\r\n\tasync copyLegacy(): Promise<UmbDataSourceResponse<boolean>> {\r\n\t\treturn await tryExecuteAndNotify(this.#host, MigrationsService.copyLegacy());\r\n\t}\r\n}\r\n","import { UmbDataSourceResponse } from '@umbraco-cms/backoffice/repository';\r\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { tryExecuteAndNotify } from '@umbraco-cms/backoffice/resources';\r\nimport { SettingsService, uSyncHandlerSetSettings, uSyncSettings } from '@jumoo/uSync';\r\n\r\nexport interface SyncSettingsDataSource {\r\n\tgetSettings(): Promise<UmbDataSourceResponse<uSyncSettings>>;\r\n\tgetHandlerSettings(\r\n\t\tsetName: string,\r\n\t): Promise<UmbDataSourceResponse<uSyncHandlerSetSettings>>;\r\n}\r\n\r\nexport class uSyncSettingsDataSource implements SyncSettingsDataSource {\r\n\t#host: UmbControllerHost;\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tthis.#host = host;\r\n\t}\r\n\r\n\tasync getSettings(): Promise<UmbDataSourceResponse<uSyncSettings>> {\r\n\t\treturn await tryExecuteAndNotify(this.#host, SettingsService.getSettings());\r\n\t}\r\n\r\n\tasync getHandlerSettings(\r\n\t\tsetName: string,\r\n\t): Promise<UmbDataSourceResponse<uSyncHandlerSetSettings>> {\r\n\t\treturn await tryExecuteAndNotify(\r\n\t\t\tthis.#host,\r\n\t\t\tSettingsService.getHandlerSetSettings({ id: setName }),\r\n\t\t);\r\n\t}\r\n\r\n\tasync getAddons() {\r\n\t\treturn await tryExecuteAndNotify(this.#host, SettingsService.getAddOns());\r\n\t}\r\n}\r\n","import { UmbModalToken } from '@umbraco-cms/backoffice/modal';\r\n\r\nexport interface uSyncImportModalData {}\r\nexport interface uSyncImportModalValue {}\r\n\r\nexport const USYNC_IMPORT_MODAL = new UmbModalToken<\r\n\tuSyncImportModalData,\r\n\tuSyncImportModalValue\r\n>('usync.import.modal', {\r\n\tmodal: {\r\n\t\ttype: 'dialog',\r\n\t},\r\n});\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tstate,\r\n\twhen,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbModalBaseElement } from '@umbraco-cms/backoffice/modal';\r\nimport { UploadImportResult } from '../../api';\r\n\r\n@customElement('usync-import-dialog')\r\nexport class uSyncImportModalDialog extends UmbModalBaseElement<any, any> {\r\n\t@state()\r\n\tresult: UploadImportResult | undefined;\r\n\r\n\t#onClose() {\r\n\t\tthis.modalContext?.reject();\r\n\t}\r\n\r\n\t#onImport() {\r\n\t\tthis.value = this.result?.success;\r\n\t\tthis.modalContext?.submit();\r\n\t}\r\n\r\n\t#onUploaded(e: CustomEvent<UploadImportResult>) {\r\n\t\tthis.result = e.detail;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<umb-body-layout .headline=${this.localize.term('uSync_importHeader')}>\r\n\t\t\t\t${this.renderForm()} ${this.renderResult()}\r\n\t\t\t</umb-body-layout>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderForm() {\r\n\t\tif (this.result !== undefined) return;\r\n\r\n\t\treturn html` ${this.localize.term('uSync_uploadIntro')}\r\n\t\t\t<usync-file-upload @uploaded=${this.#onUploaded}></usync-file-upload>\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\tid=\"cancel\"\r\n\t\t\t\t\t.label=${this.localize.term('general_close')}\r\n\t\t\t\t\t@click=\"${this.#onClose}\"></uui-button>\r\n\t\t\t</div>`;\r\n\t}\r\n\r\n\trenderResult() {\r\n\t\tif (this.result == undefined) return;\r\n\r\n\t\treturn html`${when(\r\n\t\t\t\tthis.result.success,\r\n\t\t\t\t() => html`${this.localize.term('uSync_uploadSuccess')}`,\r\n\t\t\t\t() => html`${this.localize.term('uSync_uploadError')} ${this.result?.errors}`,\r\n\t\t\t)}\r\n\t\t\t<div slot=\"actions\">\r\n\t\t\t\t<uui-button id=\"continue\" label=\"Import\" @click=\"${this.#onImport}\"></uui-button>\r\n\t\t\t</div>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\tumb-body-layout {\r\n\t\t\tmax-width: 350px;\r\n\t\t}\r\n\r\n\t\tusync-file-upload {\r\n\t\t\tpadding: 10px 0;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncImportModalDialog;\r\n","import {\r\n\tUmbArrayState,\r\n\tUmbBooleanState,\r\n\tUmbObjectState,\r\n} from '@umbraco-cms/backoffice/observable-api';\r\nimport { UmbContextToken } from '@umbraco-cms/backoffice/context-api';\r\nimport { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport { UmbControllerBase } from '@umbraco-cms/backoffice/class-api';\r\nimport {\r\n\tSyncActionGroup,\r\n\tSyncHandlerSummary,\r\n\tSyncLegacyCheckResponse,\r\n\tuSyncActionView,\r\n\tuSyncHandlerSetSettings,\r\n\tuSyncSettings,\r\n\tuSyncActionRepository,\r\n\tuSyncConstants,\r\n\tSyncPerformActionOptions,\r\n} from '@jumoo/uSync';\r\nimport uSyncSignalRContext from '../signalr/signalr.context';\r\nimport {\r\n\tUMB_WORKSPACE_CONTEXT,\r\n\tUmbWorkspaceContext,\r\n} from '@umbraco-cms/backoffice/workspace';\r\nimport { UMB_MODAL_MANAGER_CONTEXT } from '@umbraco-cms/backoffice/modal';\r\nimport { USYNC_IMPORT_MODAL } from './dialogs';\r\n\r\n/**\r\n * Context for getting and seting up actions.\r\n */\r\nexport class uSyncWorkspaceContext\r\n\textends UmbControllerBase\r\n\timplements UmbWorkspaceContext\r\n{\r\n\tpublic readonly workspaceAlias: string = uSyncConstants.workspace.alias;\r\n\r\n\tgetEntityType(): string {\r\n\t\treturn uSyncConstants.workspace.rootElement;\r\n\t}\r\n\r\n\t#repository: uSyncActionRepository;\r\n\t#signalRContext: uSyncSignalRContext | null = null;\r\n\r\n\t/**\r\n\t * list of actions that have been returned from the process\r\n\t */\r\n\t#actions = new UmbArrayState<SyncActionGroup>([], (x) => x.key);\r\n\tpublic readonly actions = this.#actions.asObservable();\r\n\r\n\t/**\r\n\t * The summary objects that show the handler boxes\r\n\t */\r\n\t#workingActions = new UmbArrayState<SyncHandlerSummary>([], (x) => x.name);\r\n\tpublic readonly currentAction = this.#workingActions.asObservable();\r\n\r\n\t/**\r\n\t * Flag to say if things are currently being processed\r\n\t */\r\n\t#working = new UmbBooleanState(false);\r\n\tpublic readonly working = this.#working.asObservable();\r\n\r\n\t/**\r\n\t * Flag to say that the last run has been completed (so results will show)\r\n\t */\r\n\t#completed = new UmbBooleanState(false);\r\n\tpublic readonly completed = this.#completed.asObservable();\r\n\r\n\t/**\r\n\t * The results of a run.\r\n\t */\r\n\t#results = new UmbArrayState<uSyncActionView>([], (x) => x.name);\r\n\tpublic readonly results = this.#results.asObservable();\r\n\r\n\t/**\r\n\t * Current settings for uSync\r\n\t */\r\n\t#settings = new UmbObjectState<uSyncSettings | undefined>(undefined);\r\n\tpublic readonly settings = this.#settings?.asObservable();\r\n\r\n\t/**\r\n\t * Handler settings object\r\n\t */\r\n\t#handlerSettings = new UmbObjectState<uSyncHandlerSetSettings | undefined>(undefined);\r\n\tpublic readonly handlerSettings = this.#handlerSettings?.asObservable();\r\n\r\n\t#legacy = new UmbObjectState<SyncLegacyCheckResponse | undefined>(undefined);\r\n\tpublic readonly legacy = this.#legacy?.asObservable();\r\n\r\n\tconstructor(host: UmbControllerHost) {\r\n\t\tsuper(host);\r\n\r\n\t\tthis.provideContext(USYNC_CORE_CONTEXT_TOKEN, this);\r\n\t\tthis.provideContext(UMB_WORKSPACE_CONTEXT, this);\r\n\r\n\t\tthis.#repository = new uSyncActionRepository(this);\r\n\r\n\t\tthis.#signalRContext = new uSyncSignalRContext(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return the current actions from the repository\r\n\t */\r\n\tasync getActions() {\r\n\t\tconst { data } = await this.#repository.getActions();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#actions.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the current uSync settings\r\n\t */\r\n\tasync getSettings() {\r\n\t\tconst { data } = await this.#repository.getSettings();\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#settings.setValue(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync getAddons() {\r\n\t\tconst { data } = await this.#repository.getAddons();\r\n\t\treturn data;\r\n\t}\r\n\r\n\t/**\r\n\t * Check to see if there is a legacy uSync folder on disk.\r\n\t */\r\n\tasync checkLegacy() {\r\n\t\tconst { data } = await this.#repository.checkLegacy();\r\n\t\tif (data) {\r\n\t\t\tthis.#legacy.setValue(data);\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync ignoreLegacy() {\r\n\t\tconst { data } = await this.#repository.ignoreLegacy();\r\n\t\treturn data ?? false;\r\n\t}\r\n\r\n\tasync copyLegacy() {\r\n\t\tconst { data } = await this.#repository.copyLegacy();\r\n\t\treturn data ?? false;\r\n\t}\r\n\r\n\t/**\r\n\t * Get handler defaults.\r\n\t */\r\n\tasync getDefaultHandlerSetSettings() {\r\n\t\tconst { data } = await this.#repository.getHandlerSettings('Default');\r\n\r\n\t\tif (data) {\r\n\t\t\tthis.#handlerSettings.setValue(data);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Perform an action (e.g import, export, etc) with options\r\n\t * @param options options for the action\r\n\t */\r\n\tasync performAction(options: SyncPerformActionOptions) {\r\n\t\tvar clientId = this.#signalRContext?.getClientId() ?? '';\r\n\r\n\t\tthis.#working.setValue(true);\r\n\t\tthis.#completed.setValue(false);\r\n\t\tthis.#results.setValue([]);\r\n\r\n\t\tvar complete = false;\r\n\t\tvar id = '';\r\n\t\tvar step: number = 0;\r\n\r\n\t\t// pre-action checks, for files.\r\n\t\tif (options.file && options.action === 'Import') {\r\n\t\t\t// imports need to open the file dialog to get the file first.\r\n\t\t\tconst uploadResult = await this.uploadFile();\r\n\t\t\tif (!uploadResult) {\r\n\t\t\t\tthis.#completed.setValue(true);\r\n\t\t\t\tthis.#working.setValue(false);\r\n\t\t\t\tthis.#results.setValue([]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdo {\r\n\t\t\tconst { data } = await this.#repository.performAction({\r\n\t\t\t\tid: id,\r\n\t\t\t\taction: options.action,\r\n\t\t\t\tgroup: options.group.key,\r\n\t\t\t\tforce: options.force,\r\n\t\t\t\tclean: options.clean,\r\n\t\t\t\tfile: options.file,\r\n\t\t\t\tstep: step,\r\n\t\t\t\tclientId: clientId,\r\n\t\t\t});\r\n\r\n\t\t\tif (data) {\r\n\t\t\t\tstep++;\r\n\r\n\t\t\t\tlet summary = data.status ?? [];\r\n\r\n\t\t\t\tthis.#workingActions.setValue(summary);\r\n\r\n\t\t\t\tid = data.requestId;\r\n\t\t\t\tcomplete = data.complete;\r\n\r\n\t\t\t\tif (complete) {\r\n\t\t\t\t\tthis.#results.setValue(data?.actions ?? []);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcomplete = true;\r\n\t\t\t}\r\n\t\t} while (!complete);\r\n\r\n\t\t// post action\r\n\t\tif (options.file && options.action === 'Export') {\r\n\t\t\t// post export , open the dialog offer the download.\r\n\t\t\tawait this.downloadFile(id);\r\n\t\t}\r\n\r\n\t\tthis.#completed.setValue(true);\r\n\t\tthis.#working.setValue(false);\r\n\t}\r\n\r\n\tasync uploadFile() {\r\n\t\tconst modalManager = await this.getContext(UMB_MODAL_MANAGER_CONTEXT);\r\n\t\tif (!modalManager) return;\r\n\r\n\t\tconst importModal = modalManager.open(this, USYNC_IMPORT_MODAL, {\r\n\t\t\tdata: {},\r\n\t\t});\r\n\r\n\t\tconst data = await importModal.onSubmit().catch(() => {\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\tif (!data) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tasync downloadFile(requestId: string) {\r\n\t\tconst response = await this.#repository.downloadFile(requestId);\r\n\r\n\t\tif (!response) return;\r\n\r\n\t\tconst url = window.URL.createObjectURL(response);\r\n\r\n\t\tconst download = document.createElement('a');\r\n\t\tdownload.href = url;\r\n\t\tdownload.download = 'usync-export.zip';\r\n\t\tdocument.body.appendChild(download);\r\n\t\tdownload.dispatchEvent(new MouseEvent('click'));\r\n\t\tdownload.remove();\r\n\t\twindow.URL.revokeObjectURL(url);\r\n\t}\r\n}\r\n\r\nexport default uSyncWorkspaceContext;\r\n\r\nexport const USYNC_CORE_CONTEXT_TOKEN = new UmbContextToken<uSyncWorkspaceContext>(\r\n\t'uSyncWorkspaceContext',\r\n);\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UUIButtonState } from '@umbraco-cms/backoffice/external/uui';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\nimport {\r\n\tUSYNC_CORE_CONTEXT_TOKEN,\r\n\tuSyncWorkspaceContext,\r\n\tSyncActionGroup,\r\n\tSyncHandlerSummary,\r\n\tSyncLegacyCheckResponse,\r\n\tuSyncActionView,\r\n} from '@jumoo/uSync';\r\n\r\n@customElement('usync-default-view')\r\nexport class uSyncDefaultViewElement extends UmbLitElement {\r\n\t#actionContext?: uSyncWorkspaceContext;\r\n\t#contextLoaded: Boolean = false;\r\n\r\n\t@state()\r\n\t_actions?: Array<SyncActionGroup>;\r\n\r\n\t@state()\r\n\t_workingActions?: Array<SyncHandlerSummary>;\r\n\r\n\t@state()\r\n\t_loaded: Boolean = false;\r\n\r\n\t@state()\r\n\t_legacy?: SyncLegacyCheckResponse;\r\n\r\n\t@state()\r\n\t_buttonState: UUIButtonState;\r\n\r\n\t@state()\r\n\t_working: boolean = false;\r\n\r\n\t@state()\r\n\t_completed: boolean = false;\r\n\r\n\t@state()\r\n\t_showProgress: boolean = false;\r\n\r\n\t@state()\r\n\t_group?: SyncActionGroup;\r\n\r\n\t@state()\r\n\t_results: Array<uSyncActionView> = [];\r\n\r\n\t@state()\r\n\t_disabled: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.consumeContext(USYNC_CORE_CONTEXT_TOKEN, (_instance) => {\r\n\t\t\tthis.#actionContext = _instance;\r\n\r\n\t\t\tthis.observe(_instance.actions, (_actions) => {\r\n\t\t\t\tthis._actions = _actions;\r\n\t\t\t\tthis._loaded = this._actions !== null;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.currentAction, (_currentAction) => {\r\n\t\t\t\tthis._workingActions = _currentAction;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.working, (_working) => {\r\n\t\t\t\tthis._working = _working;\r\n\r\n\t\t\t\tif (this._working) {\r\n\t\t\t\t\tthis._buttonState = 'waiting';\r\n\t\t\t\t\tthis._disabled = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._disabled = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.results, (_results) => {\r\n\t\t\t\tthis._results = _results;\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.completed, (_completed) => {\r\n\t\t\t\tthis._completed = _completed;\r\n\t\t\t\tif (this._completed) {\r\n\t\t\t\t\tthis._buttonState = 'success';\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.observe(_instance.legacy, (_legacy) => {\r\n\t\t\t\tthis._legacy = _legacy;\r\n\t\t\t});\r\n\r\n\t\t\tif (this.#contextLoaded == false) {\r\n\t\t\t\tthis.#actionContext?.checkLegacy();\r\n\t\t\t\tthis.#actionContext?.getActions();\r\n\t\t\t\tthis.#contextLoaded;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @method performAction\r\n\t * @param {CustomEventInit} event\r\n\t * @description do a thing, (report, import, export)\r\n\t */\r\n\t#performAction(event: CustomEventInit) {\r\n\t\tthis._showProgress = true;\r\n\t\tthis._group = event.detail.group;\r\n\t\tthis.#actionContext?.performAction({\r\n\t\t\tgroup: event.detail.group,\r\n\t\t\taction: event.detail.key,\r\n\t\t\tforce: event.detail.force,\r\n\t\t\tclean: event.detail.clean,\r\n\t\t\tfile: event.detail.file,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this._loaded == false) {\r\n\t\t\treturn html`<uui-loader></uui-loader>`;\r\n\t\t} else {\r\n\t\t\treturn html`\r\n\t\t\t\t<umb-body-layout>\r\n\t\t\t\t\t${this.#renderLegacyBanner()}\r\n\t\t\t\t\t<div class=\"wrapper\">\r\n\t\t\t\t\t\t${this.#renderActions()} ${this.#renderBanner()} ${this.#renderProcessBox()}\r\n\t\t\t\t\t\t${this.#renderReport()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</umb-body-layout>\r\n\t\t\t`;\r\n\t\t}\r\n\t}\r\n\r\n\t#renderLegacyBanner() {\r\n\t\treturn !this._legacy?.hasLegacy\r\n\t\t\t? nothing\r\n\t\t\t: html`\r\n\t\t\t\t\t<div class=\"legacy-banner\">\r\n\t\t\t\t\t\t<umb-icon name=\"icon-alert\"></umb-icon>\r\n\t\t\t\t\t\t${this.localize.term('uSync_legacyBanner')}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t`;\r\n\t}\r\n\r\n\t#renderActions() {\r\n\t\tif (!this._actions || !Array.isArray(this._actions)) return nothing;\r\n\r\n\t\tvar actions = this._actions?.map((group) => {\r\n\t\t\treturn html`\r\n\t\t\t\t<usync-action-box\r\n\t\t\t\t\t.disabled=${this._disabled}\r\n\t\t\t\t\t.group=\"${group}\"\r\n\t\t\t\t\t.state=${this._buttonState}\r\n\t\t\t\t\t@perform-action=${this.#performAction}>\r\n\t\t\t\t</usync-action-box>\r\n\t\t\t`;\r\n\t\t});\r\n\r\n\t\treturn html` <div class=\"action-buttons-box\">${actions}</div> `;\r\n\t}\r\n\r\n\t#renderBanner() {\r\n\t\tif (this._showProgress === true) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<umb-empty-state>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t<uui-icon name=\"usync-logo\"></uui-icon>\r\n\t\t\t\t\t<umb-localize key=\"uSync_banner\"></umb-localize>\r\n\t\t\t\t</h2>\r\n\t\t\t</umb-empty-state>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderProcessBox() {\r\n\t\tif (this._showProgress == false) return nothing;\r\n\r\n\t\treturn html`\r\n\t\t\t<usync-progress-box\r\n\t\t\t\t.title=${this._group?.groupName ?? 'doh!'}\r\n\t\t\t\t.actions=${this._workingActions}\r\n\t\t\t\t.complete=${this._completed}></usync-progress-box>\r\n\t\t`;\r\n\t}\r\n\r\n\t#renderReport() {\r\n\t\tif (!this._completed) return nothing;\r\n\r\n\t\treturn html`<usync-results .results=${this._results}></usync-results>`;\r\n\t}\r\n\r\n\tstatic styles = [\r\n\t\tcss`\r\n\t\t\t:host {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin-top: calc(var(--uui-size-space-4) * -1);\r\n\t\t\t}\r\n\r\n\t\t\t.wrapper {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t\tgap: var(--uui-size-space-4);\r\n\t\t\t}\r\n\r\n\t\t\t.legacy-banner {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t\tpadding: var(--uui-size-space-4);\r\n\t\t\t\tmargin: var(--uui-size-space-4) 0;\r\n\t\t\t\tbackground-color: var(--uui-color-warning);\r\n\t\t\t\tcolor: var(--uui-color-warning-contrast);\r\n\t\t\t}\r\n\r\n\t\t\t.results-box {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t}\r\n\r\n\t\t\t.action-buttons-box {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tgap: var(--uui-size-space-4);\r\n\t\t\t\tflex-wrap: wrap;\r\n\t\t\t\talign-content: stretch;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t}\r\n\r\n\t\t\tumb-empty-state {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 50%;\r\n\t\t\t\ttransform: translateY(-50%);\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tright: 0;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tcolor: var(--uui-color-border);\r\n\t\t\t\tz-index: 0;\r\n\t\t\t}\r\n\r\n\t\t\tumb-empty-state h2 {\r\n\t\t\t\tfont-size: var(--uui-type-h2-size);\r\n\t\t\t}\r\n\r\n\t\t\tumb-empty-state uui-icon {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\ttop: var(--uui-size-4);\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default uSyncDefaultViewElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-default-view': uSyncDefaultViewElement;\r\n\t}\r\n}\r\n","import { UmbTextStyles } from '@umbraco-cms/backoffice/style';\r\nimport { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport {\r\n\tLitElement,\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\n\r\nimport { uSyncWorkspaceContext, uSyncConstants } from '@jumoo/uSync';\r\n\r\nimport './views/default/default.element.js';\r\n\r\n@customElement('usync-workspace-root')\r\nexport class uSyncWorkspaceRootElement extends UmbElementMixin(LitElement) {\r\n\t#workspaceContext: uSyncWorkspaceContext;\r\n\r\n\t@state()\r\n\tversion: string = uSyncConstants.version;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#workspaceContext = new uSyncWorkspaceContext(this);\r\n\r\n\t\tthis.observe(this.#workspaceContext.completed, (_completed) => {\r\n\t\t\t// console.log('completed', _completed);\r\n\t\t});\r\n\t}\r\n\r\n\tasync connectedCallback() {\r\n\t\tsuper.connectedCallback();\r\n\t\tconst addons = await this.#workspaceContext.getAddons();\r\n\t\tthis.version = `v${addons?.version ?? uSyncConstants.version}`;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<umb-workspace-editor .enforceNoFooter=${true}>\r\n\t\t\t\t<div slot=\"header\" class=\"header\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<strong><umb-localize key=\"uSync_name\"></umb-localize></strong><br /><em\r\n\t\t\t\t\t\t\t>${this.version}</em\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</umb-workspace-editor>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles = [\r\n\t\tUmbTextStyles,\r\n\t\tcss`\r\n\t\t\tumb-workspace-editor > div.header {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\talign-content: center;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default uSyncWorkspaceRootElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-workspace-root': uSyncWorkspaceRootElement;\r\n\t}\r\n}\r\n","const _constants = {\r\n\tname: 'uSync',\r\n\tpath: 'usync',\r\n\ticon: 'icon-infinity',\r\n\tmenuName: 'Syncronisation',\r\n\tmenuAlias: 'usync.menu',\r\n\tversion: '15.0.0',\r\n\r\n\tconditions: {\r\n\t\tlegacy: 'usync.legacy.condition',\r\n\t},\r\n\r\n\tworkspace: {\r\n\t\talias: 'usync.workspace',\r\n\t\trootElement: 'usync-root',\r\n\t\telementName: 'usync-workspace-root',\r\n\t\tcontextAlias: 'usync.workspace.context',\r\n\r\n\t\tdefaultView: {\r\n\t\t\talias: 'usync.workspace.default',\r\n\t\t},\r\n\r\n\t\tsettingView: {\r\n\t\t\talias: 'usync.workspace.settings',\r\n\t\t},\r\n\r\n\t\taddOnView: {\r\n\t\t\talias: 'usync.workspace.addons',\r\n\t\t},\r\n\t\tlegacyView: {\r\n\t\t\talais: 'usync.workspace.legacy',\r\n\t\t},\r\n\t},\r\n};\r\n\r\nexport const uSyncConstants = _constants;\r\n","import { UmbControllerHost } from '@umbraco-cms/backoffice/controller-api';\r\nimport {\r\n\tUmbConditionConfigBase,\r\n\tUmbConditionControllerArguments,\r\n} from '@umbraco-cms/backoffice/extension-api';\r\nimport { UmbConditionBase } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { USYNC_CORE_CONTEXT_TOKEN } from '@jumoo/uSync';\r\n\r\nexport type SyncLegacyFilesConditionConfig = UmbConditionConfigBase & {\r\n\thasLegacyFiles: boolean;\r\n};\r\n\r\nexport class SyncLegacyFilesCondition extends UmbConditionBase<SyncLegacyFilesConditionConfig> {\r\n\tconfig: SyncLegacyFilesConditionConfig;\r\n\r\n\tconstructor(\r\n\t\thost: UmbControllerHost,\r\n\t\targs: UmbConditionControllerArguments<SyncLegacyFilesConditionConfig>,\r\n\t) {\r\n\t\tsuper(host, args);\r\n\t\tthis.config = args.config;\r\n\r\n\t\tthis.consumeContext(USYNC_CORE_CONTEXT_TOKEN, (_instance) => {\r\n\t\t\t// consuming the context means it only happens when the context exists.\r\n\t\t\t_instance.checkLegacy().then((response) => {\r\n\t\t\t\tthis.permitted = response?.hasLegacy ?? false;\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n","import { UmbElementMixin } from '@umbraco-cms/backoffice/element-api';\r\nimport { umbExtensionsRegistry } from '@umbraco-cms/backoffice/extension-registry';\r\nimport {\r\n\tLitElement,\r\n\tcustomElement,\r\n\thtml,\r\n\tproperty,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { ManifestMenuItem } from '@umbraco-cms/backoffice/menu';\r\nimport { UMB_SECTION_CONTEXT } from '@umbraco-cms/backoffice/section';\r\n\r\n@customElement('usync-menu')\r\nexport class uSyncMenuElement extends UmbElementMixin(LitElement) {\r\n\t#pathName?: string;\r\n\r\n\t@property({ type: Object, attribute: false })\r\n\tmanifest!: ManifestMenuItem;\r\n\r\n\t@state()\r\n\thasChildren: boolean = false;\r\n\r\n\t@state()\r\n\titemPath?: string;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tumbExtensionsRegistry.byType('usync-menuItem').subscribe((_items) => {\r\n\t\t\tthis.hasChildren = _items.length > 0;\r\n\t\t});\r\n\r\n\t\tthis.consumeContext(UMB_SECTION_CONTEXT, (sectionContext) => {\r\n\t\t\tthis.observe(\r\n\t\t\t\tsectionContext?.pathname,\r\n\t\t\t\t(pathName) => {\r\n\t\t\t\t\tthis.#pathName = pathName;\r\n\t\t\t\t\tthis.#constructHref();\r\n\t\t\t\t},\r\n\t\t\t\t'observePathname',\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\t#constructHref() {\r\n\t\tif (!this.#pathName) return;\r\n\t\tthis.itemPath = `section/${this.#pathName}/workspace/${this.manifest.meta.entityType}`;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`<umb-menu-item-layout\r\n\t\t\tlabel=${this.manifest.meta.label ?? this.manifest.name}\r\n\t\t\ticon-name=${this.manifest.meta.icon ?? 'icon-bug'}\r\n\t\t\t.href=${this.itemPath}\r\n\t\t\t?has-Children=${this.hasChildren}\r\n\t\t\t>${this.renderChildren()}\r\n\t\t</umb-menu-item-layout>`;\r\n\t}\r\n\r\n\trenderChildren() {\r\n\t\treturn html`<umb-extension-slot\r\n\t\t\ttype=\"usync-menuItem\"\r\n\t\t\tdefault-element=\"umb-menu-item-default\"></umb-extension-slot>`;\r\n\t}\r\n}\r\n\r\nexport default uSyncMenuElement;\r\n","import { uSyncMenuElement } from '@jumoo/uSync';\r\n\r\nconst sectionAlias = 'Umb.Section.Settings';\r\n\r\nconst menuConstants = {\r\n\talias: 'usync.menu',\r\n\tname: 'uSync',\r\n\ticon: 'icon-infinity',\r\n\trootElement: 'usync-root',\r\n};\r\n\r\nconst menu: UmbExtensionManifest = {\r\n\ttype: 'menu',\r\n\talias: menuConstants.alias,\r\n\tname: menuConstants.name,\r\n\tmeta: {\r\n\t\tlabel: menuConstants.name,\r\n\t\ticon: menuConstants.icon,\r\n\t\tentityType: menuConstants.rootElement,\r\n\t},\r\n};\r\n\r\nconst menuItem: UmbExtensionManifest = {\r\n\ttype: 'menuItem',\r\n\talias: 'usync.menu.item',\r\n\tname: 'uSync menu item',\r\n\telement: uSyncMenuElement,\r\n\tmeta: {\r\n\t\tlabel: 'uSync',\r\n\t\ticon: 'usync-logo',\r\n\t\tentityType: 'usync-root',\r\n\t\tmenus: [menuConstants.alias],\r\n\t},\r\n};\r\n\r\nconst menuSidebarApp: UmbExtensionManifest = {\r\n\ttype: 'sectionSidebarApp',\r\n\tkind: 'menu',\r\n\talias: 'usync.sidebarapp',\r\n\tname: 'uSync section sidebar menu',\r\n\tweight: 150,\r\n\tmeta: {\r\n\t\tlabel: 'Synchronisation',\r\n\t\tmenu: menu.alias,\r\n\t},\r\n\tconditions: [\r\n\t\t{\r\n\t\t\talias: 'Umb.Condition.SectionAlias',\r\n\t\t\tmatch: sectionAlias,\r\n\t\t},\r\n\t],\r\n};\r\n\r\n/// example of how to extend uSync menus.\r\n\r\n// const subMenuItem : ManifestuSyncMenuItem = {\r\n//     type: 'usync-menuItem',\r\n//     alias: 'usync.menu.sub.item',\r\n//     name: 'uSync core menu item',\r\n//     meta: {\r\n//         label: 'uSync Extension',\r\n//         icon: 'icon-brick',\r\n//         entityType: 'usync-root',\r\n//         menus: [uSyncConstants.menuAlias],\r\n//     }\r\n// }\r\n\r\nexport const manifests = [\r\n\tmenu,\r\n\tmenuSidebarApp,\r\n\tmenuItem,\r\n\t// subMenuItem\r\n];\r\n","const modal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.import.modal',\r\n\tname: 'uSync import modal',\r\n\tjs: () => import('./import-modal.element.js'),\r\n};\r\n\r\nexport const manifests = [modal];\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tifDefined,\r\n\tnothing,\r\n\tproperty,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport { SyncActionButton } from '@jumoo/uSync';\r\nimport {\r\n\tUUIButtonState,\r\n\tUUIInterfaceColor,\r\n\tUUIInterfaceLook,\r\n} from '@umbraco-cms/backoffice/external/uui';\r\n\r\n@customElement('usync-action-button')\r\nexport class SyncActionButtonElement extends UmbLitElement {\r\n\t@property({ type: Object })\r\n\tbutton?: SyncActionButton;\r\n\r\n\t@property({ type: String })\r\n\tstate?: UUIButtonState;\r\n\r\n\t@property({ type: Boolean })\r\n\tdisabled: boolean = false;\r\n\r\n\t@state()\r\n\t_popoverOpen: boolean = false;\r\n\r\n\t#onClick(item?: SyncActionButton) {\r\n\t\tif (!item) return;\r\n\r\n\t\tthis.dispatchEvent(\r\n\t\t\tnew CustomEvent('usync-action-click', {\r\n\t\t\t\tdetail: {\r\n\t\t\t\t\tbutton: item,\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`\r\n\t\t\t<uui-button-group>\r\n\t\t\t\t<uui-button\r\n\t\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\t\tlabel=${this.localize.term(`uSync_${this.button?.label}`)}\r\n\t\t\t\t\tcolor=${<UUIInterfaceColor>this.button?.color}\r\n\t\t\t\t\tlook=${<UUIInterfaceLook>this.button?.look}\r\n\t\t\t\t\tstate=${ifDefined(this.state)}\r\n\t\t\t\t\t@click=${() => this.#onClick(this.button)}></uui-button>\r\n\r\n\t\t\t\t${this.renderDropdown(this.button)}\r\n\t\t\t</uui-button-group>\r\n\t\t`;\r\n\t}\r\n\r\n\t#onPopoverToggle(e: ToggleEvent) {\r\n\t\tthis._popoverOpen = e.newState === 'open';\r\n\t}\r\n\r\n\trenderDropdown(parent?: SyncActionButton) {\r\n\t\tif (!this.button?.children) return nothing;\r\n\r\n\t\tconst buttons = this.button?.children.map((item: SyncActionButton) => {\r\n\t\t\treturn html` <uui-menu-item\r\n\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\t.label=${this.localize.term(`uSync_${item.label}`)}\r\n\t\t\t\t@click-label=${() => this.#onClick(item)}></uui-menu-item>`;\r\n\t\t});\r\n\r\n\t\tif (buttons.length == 0) return nothing;\r\n\r\n\t\tconst popoverId = `popover_${parent?.key}`;\r\n\r\n\t\treturn html`\r\n\t\t\t<uui-button\r\n\t\t\t\t.disabled=${this.disabled}\r\n\t\t\t\tpopovertarget=${popoverId}\r\n\t\t\t\t.label=${this.button.label}\r\n\t\t\t\tcolor=${<UUIInterfaceColor>parent?.color}\r\n\t\t\t\tlook=${<UUIInterfaceLook>parent?.look}\r\n\t\t\t\tcompact>\r\n\t\t\t\t<uui-symbol-expand\r\n\t\t\t\t\tclass=\"expand-symbol\"\r\n\t\t\t\t\t.open=${this._popoverOpen}></uui-symbol-expand>\r\n\t\t\t</uui-button>\r\n\r\n\t\t\t<uui-popover-container\r\n\t\t\t\tid=${popoverId}\r\n\t\t\t\tmargin=\"6\"\r\n\t\t\t\tplacement=\"bottom-end\"\r\n\t\t\t\t@toggle=${this.#onPopoverToggle}>\r\n\t\t\t\t<umb-popover-layout>\r\n\t\t\t\t\t<uui-scroll-container> ${buttons} </uui-scroll-container>\r\n\t\t\t\t</umb-popover-layout>\r\n\t\t\t</uui-popover-container>\r\n\t\t`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t.expand-symbol {\r\n\t\t\ttransform: rotate(90deg);\r\n\t\t}\r\n\r\n\t\t.expand-symbol[open] {\r\n\t\t\ttransform: rotate(180deg);\r\n\t\t}\r\n\t`;\r\n}\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-action-button': SyncActionButtonElement;\r\n\t}\r\n}\r\n","import {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tproperty,\r\n\tquery,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\n\r\n@customElement('usync-upload-file-picker')\r\nexport class uSyncFilePicker extends UmbLitElement {\r\n\t@property({ type: String })\r\n\tlabel: string = 'Upload';\r\n\r\n\t@property({ type: String })\r\n\taccept: string = '';\r\n\r\n\t@query('#file')\r\n\t_input!: HTMLInputElement;\r\n\r\n\t@state()\r\n\tprivate _file: File | undefined;\r\n\r\n\tprivate async _getFile(fileEntry: FileSystemFileEntry) {\r\n\t\treturn await new Promise<File>((resolve, reject) => {\r\n\t\t\tfileEntry.file(resolve, reject);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate async _onFilePickerChange() {\r\n\t\tconst files = this._input.files ? Array.from(this._input.files) : [];\r\n\r\n\t\tconst entry = files[0];\r\n\t\tconst isFile = entry instanceof File;\r\n\t\tconst file = isFile ? entry : await this._getFile(entry);\r\n\r\n\t\tthis._file = file;\r\n\t\tthis._dispachChangeEvent();\r\n\t}\r\n\r\n\tprivate async _removeFile() {\r\n\t\tthis._file = undefined;\r\n\t\tthis._input.value = '';\r\n\t\tthis._dispachChangeEvent();\r\n\t}\r\n\r\n\tprivate _onUpload() {\r\n\t\tthis._input.click();\r\n\t}\r\n\r\n\tprivate _dispachChangeEvent() {\r\n\t\tthis.dispatchEvent(new CustomEvent('change', { detail: this._file }));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`<input\r\n\t\t\t\t@click=${(e: Event) => e.stopPropagation()}\r\n\t\t\t\ttype=\"file\"\r\n\t\t\t\tid=\"file\"\r\n\t\t\t\tthis.accept=${this.accept}\r\n\t\t\t\t@change=${this._onFilePickerChange} />\r\n\t\t\t${this._renderFile()} ${this._renderButton()}`;\r\n\t}\r\n\r\n\t_renderFile() {\r\n\t\tif (!this._file) return nothing;\r\n\r\n\t\treturn html` <div class=\"file\">\r\n\t\t\t<div>${this._file.name}</div>\r\n\t\t\t<uui-button @click=\"${() => this._removeFile()}\" compact color=\"danger\">\r\n\t\t\t\t<umb-icon name=\"icon-trash\"></umb-icon>\r\n\t\t\t</uui-button>\r\n\t\t</div>`;\r\n\t}\r\n\r\n\t_renderButton() {\r\n\t\treturn this._file\r\n\t\t\t? nothing\r\n\t\t\t: html` <uui-button\r\n\t\t\t\t\tid=\"add-button\"\r\n\t\t\t\t\tlook=\"placeholder\"\r\n\t\t\t\t\tlabel=${this.label}\r\n\t\t\t\t\t@click=\"${this._onUpload}\"></uui-button>`;\r\n\t}\r\n\r\n\tstatic styles = [\r\n\t\tcss`\r\n\t\t\t.file {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tgap: var(--uui-size-space-2);\r\n\t\t\t}\r\n\r\n\t\t\t#file {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\r\n\t\t\t#add-button {\r\n\t\t\t\twidth: 100%;\r\n\t\t\t}\r\n\t\t`,\r\n\t];\r\n}\r\n\r\nexport default uSyncFilePicker;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-upload-file-picker': uSyncFilePicker;\r\n\t}\r\n}\r\n","import { uSyncActionRepository } from '@jumoo/uSync';\r\nimport {\r\n\tcss,\r\n\tcustomElement,\r\n\thtml,\r\n\tnothing,\r\n\tstate,\r\n} from '@umbraco-cms/backoffice/external/lit';\r\nimport { UmbId } from '@umbraco-cms/backoffice/id';\r\nimport { UmbLitElement } from '@umbraco-cms/backoffice/lit-element';\r\nimport {\r\n\tTemporaryFileStatus,\r\n\tUmbTemporaryFileManager,\r\n\tUmbTemporaryFileModel,\r\n} from '@umbraco-cms/backoffice/temporary-file';\r\n\r\n@customElement('usync-file-upload')\r\nexport class uSyncFileUploadElement extends UmbLitElement {\r\n\t#fileManager: UmbTemporaryFileManager;\r\n\t#repository: uSyncActionRepository;\r\n\r\n\t@state()\r\n\tselected: File | undefined;\r\n\r\n\t@state()\r\n\tresult: string | undefined;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.#fileManager = new UmbTemporaryFileManager(this);\r\n\t\tthis.#repository = new uSyncActionRepository(this);\r\n\r\n\t\tthis.observe(this.#fileManager.queue, (value) => {\r\n\t\t\tvalue.forEach((file) => {\r\n\t\t\t\tif (file.status === TemporaryFileStatus.SUCCESS) {\r\n\t\t\t\t\tthis.#uploadComplete(file.temporaryUnique);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t#onUpload() {\r\n\t\tif (!this.selected) return;\r\n\r\n\t\tconst upload: UmbTemporaryFileModel = {\r\n\t\t\ttemporaryUnique: UmbId.new(),\r\n\t\t\tfile: this.selected,\r\n\t\t\tstatus: TemporaryFileStatus.WAITING,\r\n\t\t};\r\n\r\n\t\tthis.#fileManager.upload([upload]);\r\n\t}\r\n\r\n\tasync #uploadComplete(temporaryUnique: string) {\r\n\t\tconst result = await this.#repository.processUpload(temporaryUnique);\r\n\r\n\t\tif (!result?.success) {\r\n\t\t\tconsole.log('upload error', result);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent(\r\n\t\t\tnew CustomEvent('uploaded', {\r\n\t\t\t\tcomposed: true,\r\n\t\t\t\tbubbles: true,\r\n\t\t\t\tdetail: result,\r\n\t\t\t}),\r\n\t\t);\r\n\t}\r\n\r\n\t#onFileChange(e: CustomEvent<File>) {\r\n\t\tthis.selected = e.detail;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn html`${this.renderUploadForm()}`;\r\n\t}\r\n\r\n\trenderUploadForm() {\r\n\t\treturn html` ${this.renderFile()} ${this.renderUploadButton()} `;\r\n\t}\r\n\r\n\trenderFile() {\r\n\t\treturn html`\r\n\t\t\t<div class=\"upload-box\">\r\n\t\t\t\t<usync-upload-file-picker\r\n\t\t\t\t\tlabel=\"Select uSync Zip file\"\r\n\t\t\t\t\t@change=${this.#onFileChange}></usync-upload-file-picker>\r\n\t\t\t</div>\r\n\t\t`;\r\n\t}\r\n\r\n\trenderUploadButton() {\r\n\t\tif (!this.selected) return nothing;\r\n\r\n\t\treturn html`<uui-button\r\n\t\t\ttype=\"button\"\r\n\t\t\tlook=\"primary\"\r\n\t\t\t@click=\"${this.#onUpload}\"\r\n\t\t\tlabel=\"Upload\"></uui-button>`;\r\n\t}\r\n\r\n\tstatic styles = css`\r\n\t\t:host {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t}\r\n\r\n\t\t.upload-box {\r\n\t\t\tflex-grow: 2;\r\n\t\t}\r\n\r\n\t\tusync-upload-file-picker {\r\n\t\t\twidth: 100%;\r\n\t\t\tflex-grow: 2;\r\n\t\t}\r\n\t`;\r\n}\r\n\r\nexport default uSyncFileUploadElement;\r\n\r\ndeclare global {\r\n\tinterface HTMLElementTagNameMap {\r\n\t\t'usync-file-upload': uSyncFileUploadElement;\r\n\t}\r\n}\r\n","import { uSyncConstants, SyncLegacyFilesConditionConfig } from '@jumoo/uSync';\r\n\r\nimport { manifests as dialogManifests } from './dialogs/manifest.js';\r\n\r\nimport './components/index.js';\r\nimport './dialogs/index.js';\r\n\r\nconst workspaceAlias = uSyncConstants.workspace.alias;\r\n\r\nconst workspace: UmbExtensionManifest = {\r\n\ttype: 'workspace',\r\n\talias: workspaceAlias,\r\n\tname: 'uSync core workspace',\r\n\tjs: () => import('./workspace.element.js'),\r\n\tmeta: {\r\n\t\tentityType: uSyncConstants.workspace.rootElement,\r\n\t},\r\n};\r\n\r\nconst context: UmbExtensionManifest = {\r\n\ttype: 'workspaceContext',\r\n\talias: uSyncConstants.workspace.contextAlias,\r\n\tname: 'uSync workspace context',\r\n\tjs: () => import('./workspace.context.js'),\r\n\tconditions: [\r\n\t\t{\r\n\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\tmatch: workspaceAlias,\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst workspaceViews: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.defaultView.alias,\r\n\t\tname: 'uSync workspace default view',\r\n\t\tjs: () => import('./views/default/default.element.js'),\r\n\t\tweight: 300,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Default',\r\n\t\t\tpathname: 'default',\r\n\t\t\ticon: 'usync-logo',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.settingView.alias,\r\n\t\tname: 'uSync workspace settings view',\r\n\t\tjs: () => import('./views/settings/settings.element.js'),\r\n\t\tweight: 200,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Settings',\r\n\t\t\tpathname: 'settings',\r\n\t\t\ticon: 'icon-settings',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.addOnView.alias,\r\n\t\tname: 'uSync addons',\r\n\t\tjs: () => import('./views/addons/addons.element.js'),\r\n\t\tweight: 100,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'AddOns',\r\n\t\t\tpathname: 'addons',\r\n\t\t\ticon: 'icon-box',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\ttype: 'workspaceView',\r\n\t\talias: uSyncConstants.workspace.legacyView.alais,\r\n\t\tname: 'uSync legacy',\r\n\t\tjs: () => import('./views/legacy/legacy.element.js'),\r\n\t\tweight: 150,\r\n\t\tmeta: {\r\n\t\t\tlabel: 'Legacy',\r\n\t\t\tpathname: 'legacy',\r\n\t\t\ticon: 'icon-dock-connector color-red',\r\n\t\t},\r\n\t\tconditions: [\r\n\t\t\t{\r\n\t\t\t\talias: 'Umb.Condition.WorkspaceAlias',\r\n\t\t\t\tmatch: workspaceAlias,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\talias: uSyncConstants.conditions.legacy,\r\n\t\t\t\thasLegacyFiles: true,\r\n\t\t\t} as SyncLegacyFilesConditionConfig,\r\n\t\t],\r\n\t},\r\n];\r\n\r\nconst workspaceActions: Array<UmbExtensionManifest> = [];\r\n\r\nexport const manifests = [\r\n\tcontext,\r\n\tworkspace,\r\n\t...workspaceViews,\r\n\t...workspaceActions,\r\n\t...dialogManifests,\r\n];\r\n","const localizations: Array<UmbExtensionManifest> = [\r\n\t{\r\n\t\ttype: 'localization',\r\n\t\talias: 'usync.lang.enus',\r\n\t\tname: 'English',\r\n\t\tweight: 0,\r\n\t\tmeta: {\r\n\t\t\tculture: 'en',\r\n\t\t},\r\n\t\tjs: () => import('./files/en-us'),\r\n\t},\r\n];\r\n\r\nexport const manifests: UmbExtensionManifest[] = [...localizations];\r\n","const modal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.details.modal',\r\n\tname: 'usync details modal',\r\n\tjs: () => import('./details-modal-element.js'),\r\n};\r\n\r\nconst legacyModal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.legacy.modal',\r\n\tname: 'uSync legacy modal',\r\n\tjs: () => import('./legacy-modal-element.js'),\r\n};\r\n\r\nconst errorModal: UmbExtensionManifest = {\r\n\ttype: 'modal',\r\n\talias: 'usync.error.modal',\r\n\tname: 'uSync error modal',\r\n\tjs: () => import('./error-modal-element.js'),\r\n};\r\n\r\nexport const manifests = [modal, legacyModal, errorModal];\r\n","import { SyncLegacyFilesCondition } from '@jumoo/uSync';\r\nimport { uSyncConstants } from '@jumoo/uSync';\r\n\r\nexport const manifests: UmbExtensionManifest[] = [\r\n\t{\r\n\t\ttype: 'condition',\r\n\t\talias: uSyncConstants.conditions.legacy,\r\n\t\tname: 'uSync Legacy Files Condition',\r\n\t\tapi: SyncLegacyFilesCondition,\r\n\t},\r\n];\r\n","const icons: UmbExtensionManifest = {\r\n\ttype: 'icons',\r\n\talias: 'usync.icons',\r\n\tname: 'uSync Icons',\r\n\tjs: () => import('./icons.js'),\r\n};\r\n\r\nexport const manifests = [icons];\r\n","import { manifests as trees } from './tree/manifest.js';\r\nimport { manifests as workspace } from './workspace/manifest.js';\r\nimport { manifests as localization } from './lang/manifest.js';\r\nimport { manifests as dialogs } from './dialogs/manifest.js';\r\nimport { manifests as conditions } from './conditions/manifest.js';\r\nimport { manifests as icons } from './icons/manifest.js';\r\n\r\nexport const manifests = [\r\n\t...localization,\r\n\t...trees,\r\n\t...workspace,\r\n\t...dialogs,\r\n\t...conditions,\r\n\t...icons,\r\n];\r\n","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { OpenAPI } from '@jumoo/uSync';\r\n\r\nimport './components/index.js';\r\nimport './dialogs/index.js';\r\nimport './signalr/index.js';\r\n\r\nimport './external/signalr/index.js';\r\nimport './api/index.js';\r\n\r\nexport * from './exports.js';\r\n\r\nimport { manifests } from './manifests.js';\r\n\r\nexport const onInit: UmbEntryPointOnInit = (_host, extensionRegistry) => {\r\n\t// register the manifests\r\n\textensionRegistry.registerMany(manifests);\r\n\r\n\t_host.consumeContext(UMB_AUTH_CONTEXT, (_auth) => {\r\n\t\tconst umbOpenApi = _auth.getOpenApiConfiguration();\r\n\t\tOpenAPI.TOKEN = umbOpenApi.token;\r\n\t\tOpenAPI.BASE = umbOpenApi.base;\r\n\t\tOpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n\t});\r\n};\r\n"],"names":["_uSyncActionBox_instances","onAction_fn","uSyncActionBox","LitElement","__privateAdd","dropdownButtons","b","html","ifDefined","e","__privateMethod","_a","_b","group","css","__decorateClass","property","customElement","uSyncProcessBox","UmbElementMixin","USYNC_SIGNALR_CONTEXT_TOKEN","_signalR","_update","_add","nothing","actionHtml","action","HandlerStatus","color","label","state","_modalContext","_uSyncResultsView_instances","toggleShowAll_fn","showDetail_fn","uSyncResultsView","UMB_MODAL_MANAGER_CONTEXT","_instance","__privateSet","arr","fn","prev","curr","groupKey","ChangeType","groups","result","groupsHtml","key","r","groupHtml","_c","count","changes","localKey","detailsModal","__privateGet","USYNC_DETAILS_MODAL","Diff","oldString","newString","_options$timeout","options","callback","self","done","value","newLen","oldLen","editLength","maxEditLength","maxExecutionTime","abortAfterTimestamp","bestPath","newPos","minDiagonalToConsider","maxDiagonalToConsider","execEditLength","diagonalPath","basePath","removePath","addPath","canAdd","addPathNewPos","canRemove","buildValues","exec","ret","path","added","removed","oldPosInc","last","oldPos","commonCount","left","right","array","i","chars","diff","lastComponent","useLongestToken","components","nextComponent","componentPos","componentLen","component","tmp","oldValue","finalComponent","generateOptions","defaults","name","extendedWordChars","reWhitespace","wordDiff","tokens","diffWords","oldStr","newStr","lineDiff","retLines","linesAndNewlines","line","sentenceDiff","cssDiff","_typeof","obj","objectPrototypeToString","jsonDiff","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","k","v","canonicalize","stack","replacementStack","replacer","canonicalizedObj","sortedKeys","_key","arrayDiff","_uSyncChangeView_instances","getJsonOrString_fn","uSyncChangeView","changesHtml","detail","newValue","changeHtml","Diff.diffWords","change","ApiError","request","response","message","CancelError","CancelablePromise","executor","resolve","reject","onResolve","onReject","reason","onCancel","cancelHandler","onFulfilled","onRejected","onFinally","error","Interceptors","index","OpenAPI","ChangeDetailTypeSchema","ChangeTypeSchema","EventMessageTypeModelSchema","HandlerSettingsSchema","HandlerStatusSchema","NotificationHeaderModelSchema","PerformActionRequestSchema","PerformActionResponseSchema","SyncActionButtonSchema","SyncActionGroupSchema","SyncHandlerSummarySchema","SyncLegacyCheckResponseSchema","UploadImportResultSchema","uSyncActionViewSchema","uSyncAddonInfoSchema","uSyncAddonSplashSchema","uSyncChangeSchema","uSyncHandlerSetSettingsSchema","uSyncOptionsSchema","uSyncSettingsSchema","isString","isStringWithValue","isBlob","isFormData","base64","str","getQueryString","params","qs","append","encodePair","getUrl","config","encoder","substring","url","getFormData","formData","process","resolver","getHeaders","token","username","password","additionalHeaders","headers","credentials","getRequestBody","sendRequest","body","controller","getResponseHeader","responseHeader","content","getResponseBody","contentType","binaryTypes","type","catchErrorCodes","errorStatus","errorStatusText","errorBody","responseBody","transformedBody","ActionsService","__request","data","MigrationsService","SettingsService","ChangeDetailType","EventMessageTypeModel","_uSyncDetailsModalElement_instances","onClose_fn","uSyncDetailsModalElement","UmbModalBaseElement","uSyncDetailsModalElement$1","UmbModalToken","_uSyncErrorModalElement_instances","uSyncErrorModalElement","headline","USYNC_ERROR_MODAL","_uSyncResultGroupView_instances","viewError_fn","uSyncResultGroupView","UmbLitElement","changeCount","classMap","when","results","rowsHtml","icon","modalContext","modal","uSyncSignalRContext","UmbControllerBase","host","_uSyncSignalRContext_instances","_connection","UmbObjectState","setupConnection_fn","signalR","UmbContextToken","HttpError","errorMessage","statusCode","trueProto","TimeoutError","AbortError","UnsupportedTransportError","transport","DisabledTransportError","FailedToStartTransportError","FailedToNegotiateWithServerError","AggregateErrors","innerErrors","HttpResponse","statusText","HttpClient","LogLevel","NullLogger","_logLevel","_message","VERSION","Arg","val","values","Platform","getDataDetail","includeContent","isArrayBuffer","formatArrayBuffer","view","num","pad","sendMessage","logger","transportName","httpClient","getUserAgentHeader","responseType","createLogger","ConsoleLogger","SubjectSubscription","subject","observer","_","minimumLogLevel","logLevel","msg","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","getErrorString","getGlobalThis","FetchHttpClient","requireFunc","abortController","timeoutId","msTimeout","deserializeContent","payload","cookies","c","XhrHttpClient","xhr","header","DefaultHttpClient","TextMessageFormat","output","input","messages","HandshakeProtocol","handshakeRequest","messageData","remainingData","binaryData","separatorIndex","responseLength","textData","MessageType","Subject","item","err","MessageBuffer","protocol","connection","bufferSize","serializedMessage","backpressurePromise","backpressurePromiseResolver","backpressurePromiseRejector","BufferedItem","ackMessage","newestAckedMessage","element","currentId","sequenceId","id","rejector","DEFAULT_TIMEOUT_IN_MS","DEFAULT_PING_INTERVAL_IN_MS","DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE","HubConnectionState","HubConnection","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","statefulReconnectBufferSize","handshakePromise","startPromise","methodName","args","streams","streamIds","invocationDescriptor","promiseQueue","cancelInvocation","invocationEvent","sendPromise","newMethod","method","handlers","removeIdx","responseMessage","nextPing","invocationMessage","methods","methodsCopy","expectsResponse","res","exception","completionMessage","m","prevRes","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","previousRetryCount","elapsedMilliseconds","retryReason","callbacks","nonblocking","invocationId","streamId","argument","arg","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","retryContext","HeaderNames","AccessTokenHttpClient","innerClient","accessTokenFactory","allowRetry","HttpTransportType","TransferFormat","AbortController$1","LongPollingTransport","AbortController","transferFormat","pollOptions","pollUrl","deleteOptions","logMessage","ServerSentEventsTransport","accessToken","opened","eventSource","WebSocketTransport","logMessageContent","webSocketConstructor","webSocket","_event","event","MAX_REDIRECTS","HttpConnection","webSocketModule","eventSourceModule","TransportSendQueue","negotiateResponse","redirects","negotiateUrl","connectionToken","requestedTransport","requestedTransferFormat","connectUrl","transportExceptions","transports","negotiate","endpoint","transportOrError","ex","callStop","useStatefulReconnect","transportMatches","s","aTag","searchParams","actualTransport","_transport","PromiseSource","transportResult","arrayBuffers","totalLength","a","offset","JSON_HUB_PROTOCOL_NAME","JsonHubProtocol","hubMessages","parsedMessage","LogLevelNameMapping","parseLogLevel","mapping","HubConnectionBuilder","logging","isLogger","transportTypeOrOptions","retryDelaysOrReconnectPolicy","milliseconds","httpConnectionOptions","uSyncActionRepository","_actionDataSource","_settingsDataSource","_migrartionDataSource","uSyncActionDataSource","uSyncSettingsDataSource","uSyncMigrationDataSource","setName","requestId","fileId","_host","tryExecuteAndNotify","USYNC_IMPORT_MODAL","_uSyncImportModalDialog_instances","onImport_fn","onUploaded_fn","uSyncImportModalDialog","uSyncImportModalDialog$1","uSyncWorkspaceContext","_repository","_signalRContext","_actions","_workingActions","_working","_completed","_results","_settings","_handlerSettings","_legacy","uSyncConstants","UmbArrayState","x","UmbBooleanState","USYNC_CORE_CONTEXT_TOKEN","UMB_WORKSPACE_CONTEXT","clientId","complete","step","summary","modalManager","download","_actionContext","_contextLoaded","_uSyncDefaultViewElement_instances","performAction_fn","renderLegacyBanner_fn","renderActions_fn","renderBanner_fn","renderProcessBox_fn","renderReport_fn","uSyncDefaultViewElement","_currentAction","actions","uSyncDefaultViewElement$1","_workspaceContext","uSyncWorkspaceRootElement","addons","UmbTextStyles","uSyncWorkspaceRootElement$1","_constants","SyncLegacyFilesCondition","UmbConditionBase","_pathName","_uSyncMenuElement_instances","constructHref_fn","uSyncMenuElement","umbExtensionsRegistry","_items","UMB_SECTION_CONTEXT","sectionContext","pathName","sectionAlias","menuConstants","menu","menuItem","menuSidebarApp","manifests","importModal_element","_SyncActionButtonElement_instances","onClick_fn","onPopoverToggle_fn","SyncActionButtonElement","parent","buttons","popoverId","uSyncFilePicker","fileEntry","entry","file","query","_fileManager","_uSyncFileUploadElement_instances","onUpload_fn","uploadComplete_fn","onFileChange_fn","uSyncFileUploadElement","UmbTemporaryFileManager","TemporaryFileStatus","upload","UmbId","temporaryUnique","workspaceAlias","workspace","workspace_element","context","workspace_context","workspaceViews","default_element","workspaceActions","dialogManifests","localizations","detailsModalElement","legacyModal","errorModal","errorModalElement","icons","localization","trees","dialogs","conditions","onInit","extensionRegistry","UMB_AUTH_CONTEXT","_auth","umbOpenApi"],"mappings":"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","x_google_ignoreList":[3,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43]}